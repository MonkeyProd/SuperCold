<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="comments_8hpp" kind="file" language="C++">
    <compoundname>comments.hpp</compoundname>
    <includes local="no">initializer_list</includes>
    <includes local="no">iterator</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">string</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includedby refid="types_8hpp" local="yes">external/toml/types.hpp</includedby>
    <includedby refid="value_8hpp" local="yes">external/toml/value.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>external/toml/comments.hpp</label>
        <link refid="comments_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>initializer_list</label>
      </node>
      <node id="3">
        <label>iterator</label>
      </node>
      <node id="4">
        <label>stdexcept</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="6">
        <label>type_traits</label>
      </node>
      <node id="7">
        <label>utility</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>Game/Game.cpp</label>
        <link refid="_game_8cpp"/>
      </node>
      <node id="6">
        <label>Game/Game.hpp</label>
        <link refid="_game_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Player/Player.cpp</label>
        <link refid="_player_8cpp"/>
      </node>
      <node id="11">
        <label>Player/Player.hpp</label>
        <link refid="_player_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SettingsManager/SettingsManager.cpp</label>
        <link refid="_settings_manager_8cpp"/>
      </node>
      <node id="5">
        <label>SettingsManager/SettingsManager.hpp</label>
        <link refid="_settings_manager_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>SpriteContoller/SpriteController.cpp</label>
        <link refid="_sprite_controller_8cpp"/>
      </node>
      <node id="10">
        <label>SpriteContoller/SpriteController.hpp</label>
        <link refid="_sprite_controller_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>external/toml.hpp</label>
        <link refid="toml_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>external/toml/comments.hpp</label>
        <link refid="comments_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>external/toml/get.hpp</label>
        <link refid="get_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>external/toml/literal.hpp</label>
        <link refid="literal_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>external/toml/parser.hpp</label>
        <link refid="parser_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>external/toml/serializer.hpp</label>
        <link refid="serializer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>external/toml/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>external/toml/value.hpp</label>
        <link refid="value_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structtoml_1_1preserve__comments" prot="public">toml::preserve_comments</innerclass>
    <innerclass refid="structtoml_1_1detail_1_1empty__iterator" prot="public">toml::detail::empty_iterator</innerclass>
    <innerclass refid="structtoml_1_1discard__comments" prot="public">toml::discard_comments</innerclass>
    <innernamespace refid="namespacetoml">toml</innernamespace>
    <innernamespace refid="namespacetoml_1_1detail">toml::detail</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="comments_8hpp_1ac5952aa66c2a24cfdbb3d82f70f22618" prot="public" static="no">
        <name>TOML11_DEFAULT_COMMENT_STRATEGY</name>
        <initializer><ref refid="structtoml_1_1discard__comments" kindref="compound">::toml::discard_comments</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="external/toml/comments.hpp" line="16" column="12" bodyfile="external/toml/comments.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Toru<sp/>Niina<sp/>2019.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TOML11_COMMENTS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOML11_COMMENTS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;initializer_list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TOML11_PRESERVE_COMMENTS_BY_DEFAULT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>TOML11_DEFAULT_COMMENT_STRATEGY<sp/>::toml::preserve_comments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="comments_8hpp_1ac5952aa66c2a24cfdbb3d82f70f22618" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>TOML11_DEFAULT_COMMENT_STRATEGY<sp/>::toml::discard_comments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>provides<sp/>mainly<sp/>two<sp/>classes,<sp/>`preserve_comments`<sp/>and<sp/>`discard_comments`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Those<sp/>two<sp/>are<sp/>a<sp/>container<sp/>that<sp/>have<sp/>the<sp/>same<sp/>interface<sp/>as<sp/>`std::vector&lt;std::string&gt;`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>bahaves<sp/>in<sp/>the<sp/>opposite<sp/>way.<sp/>`preserve_comments`<sp/>is<sp/>just<sp/>the<sp/>same<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>`std::vector&lt;std::string&gt;`<sp/>and<sp/>each<sp/>`std::string`<sp/>corresponds<sp/>to<sp/>a<sp/>comment<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Conversely,<sp/>`discard_comments`<sp/>discards<sp/>all<sp/>the<sp/>strings<sp/>and<sp/>ignores<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>assigned<sp/>in<sp/>it.<sp/>`discard_comments`<sp/>is<sp/>always<sp/>empty<sp/>and<sp/>you<sp/>will<sp/>encounter<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>error<sp/>whenever<sp/>you<sp/>access<sp/>to<sp/>the<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetoml" kindref="compound">toml</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discard_comments;<sp/></highlight><highlight class="comment">//<sp/>forward<sp/>decl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>use<sp/>it<sp/>in<sp/>the<sp/>following<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>const<sp/>toml::basic_value&lt;toml::preserve_comments&gt;<sp/>data<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>toml::parse&lt;toml::preserve_comments&gt;(&quot;example.toml&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>interface<sp/>is<sp/>almost<sp/>the<sp/>same<sp/>as<sp/>std::vector&lt;std::string&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structtoml_1_1preserve__comments" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`container_type`<sp/>is<sp/>not<sp/>provided<sp/>in<sp/>discard_comments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>use<sp/>this<sp/>inner-type<sp/>in<sp/>a<sp/>generic<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structtoml_1_1preserve__comments_1a958304a897076e6206283fd0f422ebfc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1preserve__comments_1a958304a897076e6206283fd0f422ebfc" kindref="member">container_type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::vector&lt;std::string&gt;;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>container_type::size_type;</highlight></codeline>
<codeline lineno="43" refid="structtoml_1_1preserve__comments_1ac2d35222da6c1df611efc0039be93b50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1preserve__comments_1ac2d35222da6c1df611efc0039be93b50" kindref="member">difference_type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>container_type::difference_type;</highlight></codeline>
<codeline lineno="44" refid="structtoml_1_1preserve__comments_1ac249454b4d33db2affb27cd3eca6c2f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1preserve__comments_1ac249454b4d33db2affb27cd3eca6c2f4" kindref="member">value_type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>container_type::value_type;</highlight></codeline>
<codeline lineno="45" refid="structtoml_1_1preserve__comments_1ac0fffa7271db275e03ec35c883312664" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1preserve__comments_1ac0fffa7271db275e03ec35c883312664" kindref="member">reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>container_type::reference;</highlight></codeline>
<codeline lineno="46" refid="structtoml_1_1preserve__comments_1a94c3891c3837eda329ced48bc6e98a09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1preserve__comments_1a94c3891c3837eda329ced48bc6e98a09" kindref="member">const_reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>container_type::const_reference;</highlight></codeline>
<codeline lineno="47" refid="structtoml_1_1preserve__comments_1a8fcf5e025621afc3dd0eb790b3b7e2ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1preserve__comments_1a8fcf5e025621afc3dd0eb790b3b7e2ca" kindref="member">pointer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>container_type::pointer;</highlight></codeline>
<codeline lineno="48" refid="structtoml_1_1preserve__comments_1aa10a7504138c5ac6c0633cb4799952ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1preserve__comments_1aa10a7504138c5ac6c0633cb4799952ab" kindref="member">const_pointer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>container_type::const_pointer;</highlight></codeline>
<codeline lineno="49" refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>container_type::iterator;</highlight></codeline>
<codeline lineno="50" refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" kindref="member">const_iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>container_type::const_iterator;</highlight></codeline>
<codeline lineno="51" refid="structtoml_1_1preserve__comments_1aabe8c72931b72d6f5b6e24065585b0a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1preserve__comments_1aabe8c72931b72d6f5b6e24065585b0a5" kindref="member">reverse_iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>container_type::reverse_iterator;</highlight></codeline>
<codeline lineno="52" refid="structtoml_1_1preserve__comments_1a4a88e018ddfd1d28ed2ee7438643cbec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1preserve__comments_1a4a88e018ddfd1d28ed2ee7438643cbec" kindref="member">const_reverse_iterator</ref><sp/>=<sp/>container_type::const_reverse_iterator;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structtoml_1_1preserve__comments_1a828b6deb460f0947c0643c484869e6c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a828b6deb460f0947c0643c484869e6c1" kindref="member">preserve_comments</ref>()<sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55" refid="structtoml_1_1preserve__comments_1a9de5cb09a9aaacc3c13b68f769e2a444" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a9de5cb09a9aaacc3c13b68f769e2a444" kindref="member">~preserve_comments</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56" refid="structtoml_1_1preserve__comments_1a03fa685d6e6eb3b0212ed4f16a648695" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a03fa685d6e6eb3b0212ed4f16a648695" kindref="member">preserve_comments</ref>(<ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57" refid="structtoml_1_1preserve__comments_1a4b72ff0a0b9c1a4d768a5e6438877b33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a4b72ff0a0b9c1a4d768a5e6438877b33" kindref="member">preserve_comments</ref>(<ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref><sp/>&amp;&amp;)<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58" refid="structtoml_1_1preserve__comments_1a2bf030800397db46f08a854ac9783343" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/><ref refid="structtoml_1_1preserve__comments_1a2bf030800397db46f08a854ac9783343" kindref="member">operator=</ref>(<ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59" refid="structtoml_1_1preserve__comments_1a2586250eb79e94dbb512687d44306a0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/><ref refid="structtoml_1_1preserve__comments_1a2586250eb79e94dbb512687d44306a0d" kindref="member">operator=</ref>(<ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref><sp/>&amp;&amp;)<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structtoml_1_1preserve__comments_1aca16c0b5218090fa69ef0392e5efa930" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1aca16c0b5218090fa69ef0392e5efa930" kindref="member">preserve_comments</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>c):<sp/>comments(c){}</highlight></codeline>
<codeline lineno="62" refid="structtoml_1_1preserve__comments_1affa28a588193d35446104b6bd492ba02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1affa28a588193d35446104b6bd492ba02" kindref="member">preserve_comments</ref>(std::vector&lt;std::string&gt;&amp;&amp;<sp/>c)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>comments(std::move(c))</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="65" refid="structtoml_1_1preserve__comments_1a22bb4bf92f4dba759f44e3131c2dd913" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/><ref refid="structtoml_1_1preserve__comments_1a22bb4bf92f4dba759f44e3131c2dd913" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>c)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comments<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70" refid="structtoml_1_1preserve__comments_1a7b5eb1dda49b0c57a62ab60a02582335" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/><ref refid="structtoml_1_1preserve__comments_1a7b5eb1dda49b0c57a62ab60a02582335" kindref="member">operator=</ref>(std::vector&lt;std::string&gt;&amp;&amp;<sp/>c)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comments<sp/>=<sp/>std::move(c);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structtoml_1_1preserve__comments_1adb20ab0eb39bb01885658bd38c1f16c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1adb20ab0eb39bb01885658bd38c1f16c7" kindref="member">preserve_comments</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="structtoml_1_1preserve__comments_1adaec16186cdd2fbeb46c9e1c13cf80c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1adaec16186cdd2fbeb46c9e1c13cf80c2" kindref="member">preserve_comments</ref>(<ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/>n):<sp/>comments(n)<sp/>{}</highlight></codeline>
<codeline lineno="79" refid="structtoml_1_1preserve__comments_1a60a4204324216837f736d31d52c010fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a60a4204324216837f736d31d52c010fd" kindref="member">preserve_comments</ref>(<ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>x):<sp/>comments(n,<sp/>x)<sp/>{}</highlight></codeline>
<codeline lineno="80" refid="structtoml_1_1preserve__comments_1a8910449f5da48ce7aba07a443c75e018" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a8910449f5da48ce7aba07a443c75e018" kindref="member">preserve_comments</ref>(std::initializer_list&lt;std::string&gt;<sp/>x):<sp/>comments(x)<sp/>{}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputIterator&gt;</highlight></codeline>
<codeline lineno="82" refid="structtoml_1_1preserve__comments_1ae31b32e6e2f87ddc1274aea7851e521b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ae31b32e6e2f87ddc1274aea7851e521b" kindref="member">preserve_comments</ref>(InputIterator<sp/>first,<sp/>InputIterator<sp/>last)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>comments(first,<sp/>last)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputIterator&gt;</highlight></codeline>
<codeline lineno="87" refid="structtoml_1_1preserve__comments_1ac9be30bf2bf55439eea7c7e1ab602c48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1ac9be30bf2bf55439eea7c7e1ab602c48" kindref="member">assign</ref>(InputIterator<sp/>first,<sp/>InputIterator<sp/>last)<sp/>{comments.assign(first,<sp/>last);}</highlight></codeline>
<codeline lineno="88" refid="structtoml_1_1preserve__comments_1aebe3ffc53fd3b40651ee48cbae051fff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1aebe3ffc53fd3b40651ee48cbae051fff" kindref="member">assign</ref>(std::initializer_list&lt;std::string&gt;<sp/>ini)<sp/><sp/>{comments.assign(ini);}</highlight></codeline>
<codeline lineno="89" refid="structtoml_1_1preserve__comments_1a380c9788fbc8adabd9aa6a407b8f41e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a380c9788fbc8adabd9aa6a407b8f41e6" kindref="member">assign</ref>(<ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val)<sp/><sp/><sp/><sp/><sp/>{comments.assign(n,<sp/>val);}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Related<sp/>to<sp/>the<sp/>issue<sp/>#97.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>known<sp/>that<sp/>`std::vector::insert`<sp/>and<sp/>`std::vector::erase`<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>standard<sp/>library<sp/>implementation<sp/>included<sp/>in<sp/>GCC<sp/>4.8.5<sp/>takes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`std::vector::iterator`<sp/>instead<sp/>of<sp/>`std::vector::const_iterator`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>of<sp/>the<sp/>const-correctness,<sp/>we<sp/>cannot<sp/>convert<sp/>a<sp/>`const_iterator`<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>`iterator`.<sp/>It<sp/>causes<sp/>compilation<sp/>error<sp/>in<sp/>GCC<sp/>4.8.5.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>defined(__GNUC_MINOR__)<sp/>&amp;&amp;<sp/>defined(__GNUC_PATCHLEVEL__)<sp/>&amp;&amp;<sp/>!defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>(__GNUC__<sp/>*<sp/>10000<sp/>+<sp/>__GNUC_MINOR__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_PATCHLEVEL__)<sp/>&lt;=<sp/>40805</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>TOML11_WORKAROUND_GCC_4_8_X_STANDARD_LIBRARY_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TOML11_WORKAROUND_GCC_4_8_X_STANDARD_LIBRARY_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a9680126f62827e04384df7db9598b056" kindref="member">insert</ref>(<ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>x)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.insert(p,<sp/>x);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a9680126f62827e04384df7db9598b056" kindref="member">insert</ref>(<ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/>p,<sp/>std::string&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/>x)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.insert(p,<sp/>std::move(x));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a9680126f62827e04384df7db9598b056" kindref="member">insert</ref>(<ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/>p,<sp/><ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>x)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.insert(p,<sp/>n,<sp/>x);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputIterator&gt;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a9680126f62827e04384df7db9598b056" kindref="member">insert</ref>(<ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/>p,<sp/>InputIterator<sp/>first,<sp/>InputIterator<sp/>last)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.insert(p,<sp/>first,<sp/>last);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a9680126f62827e04384df7db9598b056" kindref="member">insert</ref>(<ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/>p,<sp/>std::initializer_list&lt;std::string&gt;<sp/>ini)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.insert(p,<sp/>ini);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a77add5549f81db74d00bd5c2a45dcd07" kindref="member">emplace</ref>(<ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/>p,<sp/>Ts&amp;&amp;<sp/>...<sp/>args)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.emplace(p,<sp/>std::forward&lt;Ts&gt;(args)...);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a1882e37548fceae20666723981076eb1" kindref="member">erase</ref>(<ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/>pos)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.erase(pos);}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a1882e37548fceae20666723981076eb1" kindref="member">erase</ref>(<ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/>first,<sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/>last)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.erase(first,<sp/>last);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="structtoml_1_1preserve__comments_1a9680126f62827e04384df7db9598b056" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a9680126f62827e04384df7db9598b056" kindref="member">insert</ref>(<ref refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" kindref="member">const_iterator</ref><sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>x)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.insert(p,<sp/>x);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143" refid="structtoml_1_1preserve__comments_1ae6ead07c4900c09fcc21f8656c587b28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1ae6ead07c4900c09fcc21f8656c587b28" kindref="member">insert</ref>(<ref refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" kindref="member">const_iterator</ref><sp/>p,<sp/>std::string&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/>x)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.insert(p,<sp/>std::move(x));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147" refid="structtoml_1_1preserve__comments_1a4bcfd3958ae852cf251b4cd2c32f7e12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a4bcfd3958ae852cf251b4cd2c32f7e12" kindref="member">insert</ref>(<ref refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" kindref="member">const_iterator</ref><sp/>p,<sp/><ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>x)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.insert(p,<sp/>n,<sp/>x);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputIterator&gt;</highlight></codeline>
<codeline lineno="152" refid="structtoml_1_1preserve__comments_1aa227b8186816daf1cbc2434d21fc72a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1aa227b8186816daf1cbc2434d21fc72a2" kindref="member">insert</ref>(<ref refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" kindref="member">const_iterator</ref><sp/>p,<sp/>InputIterator<sp/>first,<sp/>InputIterator<sp/>last)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.insert(p,<sp/>first,<sp/>last);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156" refid="structtoml_1_1preserve__comments_1a471386e6a81f61e2a3687fba24d45a85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a471386e6a81f61e2a3687fba24d45a85" kindref="member">insert</ref>(<ref refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" kindref="member">const_iterator</ref><sp/>p,<sp/>std::initializer_list&lt;std::string&gt;<sp/>ini)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.insert(p,<sp/>ini);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="162" refid="structtoml_1_1preserve__comments_1a77add5549f81db74d00bd5c2a45dcd07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a77add5549f81db74d00bd5c2a45dcd07" kindref="member">emplace</ref>(<ref refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" kindref="member">const_iterator</ref><sp/>p,<sp/>Ts&amp;&amp;<sp/>...<sp/>args)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.emplace(p,<sp/>std::forward&lt;Ts&gt;(args)...);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="structtoml_1_1preserve__comments_1a1882e37548fceae20666723981076eb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a1882e37548fceae20666723981076eb1" kindref="member">erase</ref>(<ref refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" kindref="member">const_iterator</ref><sp/>pos)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.erase(pos);}</highlight></codeline>
<codeline lineno="168" refid="structtoml_1_1preserve__comments_1a090e5b53a3b3632ed60adc20467d5e77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a090e5b53a3b3632ed60adc20467d5e77" kindref="member">erase</ref>(<ref refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" kindref="member">const_iterator</ref><sp/>first,<sp/><ref refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" kindref="member">const_iterator</ref><sp/>last)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.erase(first,<sp/>last);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="structtoml_1_1preserve__comments_1a955455f3bd0bc1a3cc0d46b66f0c510a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a955455f3bd0bc1a3cc0d46b66f0c510a" kindref="member">swap</ref>(<ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>other)<sp/>{comments.swap(other.comments);}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="structtoml_1_1preserve__comments_1a2f64fab30d5b486a0e00d66e5fa121a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a2f64fab30d5b486a0e00d66e5fa121a9" kindref="member">push_back</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>v)<sp/>{comments.push_back(v);}</highlight></codeline>
<codeline lineno="177" refid="structtoml_1_1preserve__comments_1a61fbb3c12237b80f35f8f9b7a6709a67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a61fbb3c12237b80f35f8f9b7a6709a67" kindref="member">push_back</ref>(std::string&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/>v)<sp/>{comments.push_back(std::move(v));}</highlight></codeline>
<codeline lineno="178" refid="structtoml_1_1preserve__comments_1a7010964e10b2c378c598213b118e3bd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a7010964e10b2c378c598213b118e3bd8" kindref="member">pop_back</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{comments.pop_back();}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="181" refid="structtoml_1_1preserve__comments_1ae330c4a1cd658f732f1650ae19379fd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1ae330c4a1cd658f732f1650ae19379fd6" kindref="member">emplace_back</ref>(Ts&amp;&amp;<sp/>...<sp/>args)<sp/>{comments.emplace_back(std::forward&lt;Ts&gt;(args)...);}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="structtoml_1_1preserve__comments_1a80c46e6967dd58b53e44449337bdffb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a80c46e6967dd58b53e44449337bdffb5" kindref="member">clear</ref>()<sp/>{comments.clear();}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="structtoml_1_1preserve__comments_1a8f2472b2ad8b228f17923b4fef6f5478" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a8f2472b2ad8b228f17923b4fef6f5478" kindref="member">size</ref>()<sp/><sp/><sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.size();}</highlight></codeline>
<codeline lineno="186" refid="structtoml_1_1preserve__comments_1a3719c9c1eb6a79c8261e2d6f7c5cfa4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a3719c9c1eb6a79c8261e2d6f7c5cfa4c" kindref="member">max_size</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.max_size();}</highlight></codeline>
<codeline lineno="187" refid="structtoml_1_1preserve__comments_1a0f7faf83d7a456802f43e76a5d2535aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a0f7faf83d7a456802f43e76a5d2535aa" kindref="member">capacity</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.capacity();}</highlight></codeline>
<codeline lineno="188" refid="structtoml_1_1preserve__comments_1aa88bd393934225c37173994d4dbd0606" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1aa88bd393934225c37173994d4dbd0606" kindref="member">empty</ref>()<sp/><sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.empty();}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="structtoml_1_1preserve__comments_1a3de6cc5635f6a4e6d157bcd6279091a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a3de6cc5635f6a4e6d157bcd6279091a0" kindref="member">reserve</ref>(<ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{comments.reserve(n);}</highlight></codeline>
<codeline lineno="191" refid="structtoml_1_1preserve__comments_1a8afa1bc9741b532ea5fa9b528c167156" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a8afa1bc9741b532ea5fa9b528c167156" kindref="member">resize</ref>(<ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{comments.resize(n);}</highlight></codeline>
<codeline lineno="192" refid="structtoml_1_1preserve__comments_1abfdfbd222e99e9d5ace4c639607c1c00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1abfdfbd222e99e9d5ace4c639607c1c00" kindref="member">resize</ref>(<ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c)<sp/>{comments.resize(n,<sp/>c);}</highlight></codeline>
<codeline lineno="193" refid="structtoml_1_1preserve__comments_1a7548c7235e95ac1967792473016f3f3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a7548c7235e95ac1967792473016f3f3b" kindref="member">shrink_to_fit</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{comments.shrink_to_fit();}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="structtoml_1_1preserve__comments_1a508bec08e117370c96eadc3165a6ab8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ac0fffa7271db275e03ec35c883312664" kindref="member">reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a508bec08e117370c96eadc3165a6ab8f" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments[n];}</highlight></codeline>
<codeline lineno="196" refid="structtoml_1_1preserve__comments_1a0cc6221fafdc8c36e0dddf1d19713151" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a94c3891c3837eda329ced48bc6e98a09" kindref="member">const_reference</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a0cc6221fafdc8c36e0dddf1d19713151" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/>n)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments[n];}</highlight></codeline>
<codeline lineno="197" refid="structtoml_1_1preserve__comments_1a0914654cdb9fb06f1738e1f6f531b3a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ac0fffa7271db275e03ec35c883312664" kindref="member">reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a0914654cdb9fb06f1738e1f6f531b3a7" kindref="member">at</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.at(n);}</highlight></codeline>
<codeline lineno="198" refid="structtoml_1_1preserve__comments_1a6ba503e50ce207ea14d415f2323779ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a94c3891c3837eda329ced48bc6e98a09" kindref="member">const_reference</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a6ba503e50ce207ea14d415f2323779ff" kindref="member">at</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a01c58656f8dbc24f6d27aff2945d4564" kindref="member">size_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.at(n);}</highlight></codeline>
<codeline lineno="199" refid="structtoml_1_1preserve__comments_1a0742322445379b4396d7c0360d9f1025" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ac0fffa7271db275e03ec35c883312664" kindref="member">reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a0742322445379b4396d7c0360d9f1025" kindref="member">front</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.front();}</highlight></codeline>
<codeline lineno="200" refid="structtoml_1_1preserve__comments_1ae7855315a5fd090f692e62e4b77a1e84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a94c3891c3837eda329ced48bc6e98a09" kindref="member">const_reference</ref><sp/><ref refid="structtoml_1_1preserve__comments_1ae7855315a5fd090f692e62e4b77a1e84" kindref="member">front</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.front();}</highlight></codeline>
<codeline lineno="201" refid="structtoml_1_1preserve__comments_1afa7e9dc9780057d1ef7e28840a343452" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ac0fffa7271db275e03ec35c883312664" kindref="member">reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1afa7e9dc9780057d1ef7e28840a343452" kindref="member">back</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.back();}</highlight></codeline>
<codeline lineno="202" refid="structtoml_1_1preserve__comments_1a9fd9aab4e1a153be47c3c5d310d8e350" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a94c3891c3837eda329ced48bc6e98a09" kindref="member">const_reference</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a9fd9aab4e1a153be47c3c5d310d8e350" kindref="member">back</ref>()<sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.back();}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="structtoml_1_1preserve__comments_1a46022433008d38032c25b4e1703a6dcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a8fcf5e025621afc3dd0eb790b3b7e2ca" kindref="member">pointer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a46022433008d38032c25b4e1703a6dcf" kindref="member">data</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.data();}</highlight></codeline>
<codeline lineno="205" refid="structtoml_1_1preserve__comments_1aff2ebcb87e3fd406e09c234f720bbbf3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1aa10a7504138c5ac6c0633cb4799952ab" kindref="member">const_pointer</ref><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1aff2ebcb87e3fd406e09c234f720bbbf3" kindref="member">data</ref>()<sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.data();}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="structtoml_1_1preserve__comments_1ab375a0516a1c472ce91ae77be2913398" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ab375a0516a1c472ce91ae77be2913398" kindref="member">begin</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.begin();}</highlight></codeline>
<codeline lineno="208" refid="structtoml_1_1preserve__comments_1ac2d8060632b0bb6943fea6f4e3789775" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ad036489a2ef356bd3d3f1d726b78a824" kindref="member">iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1ac2d8060632b0bb6943fea6f4e3789775" kindref="member">end</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.end();}</highlight></codeline>
<codeline lineno="209" refid="structtoml_1_1preserve__comments_1a07d744fb7a10f944d3a21734f04c01fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" kindref="member">const_iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a07d744fb7a10f944d3a21734f04c01fa" kindref="member">begin</ref>()<sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.begin();}</highlight></codeline>
<codeline lineno="210" refid="structtoml_1_1preserve__comments_1ab8fd05c4315b5bd648c9cd82541f298c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" kindref="member">const_iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1ab8fd05c4315b5bd648c9cd82541f298c" kindref="member">end</ref>()<sp/><sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.end();}</highlight></codeline>
<codeline lineno="211" refid="structtoml_1_1preserve__comments_1a12888ff1791016b32ac94c3809e041e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" kindref="member">const_iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a12888ff1791016b32ac94c3809e041e9" kindref="member">cbegin</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.cbegin();}</highlight></codeline>
<codeline lineno="212" refid="structtoml_1_1preserve__comments_1af854d62f3224726e2088c82d59010d7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a5c47eddf1c6c94896a89c1b22386e50e" kindref="member">const_iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1af854d62f3224726e2088c82d59010d7d" kindref="member">cend</ref>()<sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.cend();}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="structtoml_1_1preserve__comments_1a8ef5e1c5fd9187d5a8f4191eec122306" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1aabe8c72931b72d6f5b6e24065585b0a5" kindref="member">reverse_iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a8ef5e1c5fd9187d5a8f4191eec122306" kindref="member">rbegin</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.rbegin();}</highlight></codeline>
<codeline lineno="215" refid="structtoml_1_1preserve__comments_1a1a9dc5190cb5e5b8c677e76acb1895c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1aabe8c72931b72d6f5b6e24065585b0a5" kindref="member">reverse_iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a1a9dc5190cb5e5b8c677e76acb1895c3" kindref="member">rend</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.rend();}</highlight></codeline>
<codeline lineno="216" refid="structtoml_1_1preserve__comments_1a68f7cbb4878f521f0fbab443b95bf477" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a4a88e018ddfd1d28ed2ee7438643cbec" kindref="member">const_reverse_iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a68f7cbb4878f521f0fbab443b95bf477" kindref="member">rbegin</ref>()<sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.rbegin();}</highlight></codeline>
<codeline lineno="217" refid="structtoml_1_1preserve__comments_1af6d7caa4caf2aa517bf196eb86c106d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a4a88e018ddfd1d28ed2ee7438643cbec" kindref="member">const_reverse_iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1af6d7caa4caf2aa517bf196eb86c106d9" kindref="member">rend</ref>()<sp/><sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.rend();}</highlight></codeline>
<codeline lineno="218" refid="structtoml_1_1preserve__comments_1a907281a276285e0bc057025148653a6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a4a88e018ddfd1d28ed2ee7438643cbec" kindref="member">const_reverse_iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a907281a276285e0bc057025148653a6d" kindref="member">crbegin</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.crbegin();}</highlight></codeline>
<codeline lineno="219" refid="structtoml_1_1preserve__comments_1a9b213f5ccd7324be5f9d8e519b2d1db1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a4a88e018ddfd1d28ed2ee7438643cbec" kindref="member">const_reverse_iterator</ref><sp/><ref refid="structtoml_1_1preserve__comments_1a9b213f5ccd7324be5f9d8e519b2d1db1" kindref="member">crend</ref>()<sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comments.crend();}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a974a87c1ec33a3de217da5ed67ac4451" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1adde9235a0ca2a9534d68e788f199a8a0" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1addc7a4efcec49f9c549ef73d31e8316e" kindref="member">operator&lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1ae3232f5662b4a1d57d6936b88f820eb0" kindref="member">operator&lt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1af26ecd1e4b07203990d82b2cf8272eef" kindref="member">operator&gt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1af7361e1288f31858dcf5544ee2ad91b7" kindref="member">operator&gt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a955455f3bd0bc1a3cc0d46b66f0c510a" kindref="member">swap</ref>(<ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;,<sp/>std::vector&lt;std::string&gt;&amp;);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments_1a955455f3bd0bc1a3cc0d46b66f0c510a" kindref="member">swap</ref>(std::vector&lt;std::string&gt;&amp;,<sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1preserve__comments_1a958304a897076e6206283fd0f422ebfc" kindref="member">container_type</ref><sp/>comments;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="structtoml_1_1preserve__comments_1a974a87c1ec33a3de217da5ed67ac4451" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1ae9ac58857cfdda9535ef98266b65304b" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.comments<sp/>==<sp/>rhs.comments;}</highlight></codeline>
<codeline lineno="237" refid="structtoml_1_1preserve__comments_1adde9235a0ca2a9534d68e788f199a8a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1a03e338a600f118cd5c5d3e7fee31f6c6" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.comments<sp/>!=<sp/>rhs.comments;}</highlight></codeline>
<codeline lineno="238" refid="structtoml_1_1preserve__comments_1addc7a4efcec49f9c549ef73d31e8316e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1acbb3a32f389eaf9e5097d2b23df77b4e" kindref="member">operator&lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.comments<sp/>&lt;<sp/><sp/>rhs.comments;}</highlight></codeline>
<codeline lineno="239" refid="structtoml_1_1preserve__comments_1ae3232f5662b4a1d57d6936b88f820eb0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1a17f8791df6efda2a712efa14c334c33d" kindref="member">operator&lt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.comments<sp/>&lt;=<sp/>rhs.comments;}</highlight></codeline>
<codeline lineno="240" refid="structtoml_1_1preserve__comments_1af26ecd1e4b07203990d82b2cf8272eef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1a993726b0c054cbf5b20674f14690d6ed" kindref="member">operator&gt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.comments<sp/>&gt;<sp/><sp/>rhs.comments;}</highlight></codeline>
<codeline lineno="241" refid="structtoml_1_1preserve__comments_1af7361e1288f31858dcf5544ee2ad91b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1a6b51fe3d00e083b549644d994bd547c7" kindref="member">operator&gt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.comments<sp/>&gt;=<sp/>rhs.comments;}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="namespacetoml_1a9a68dfa1ac6b1762835738786dbb3cf2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1a9a68dfa1ac6b1762835738786dbb3cf2" kindref="member">swap</ref>(<ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>lhs,<sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>lhs.<ref refid="structtoml_1_1preserve__comments_1a955455f3bd0bc1a3cc0d46b66f0c510a" kindref="member">swap</ref>(rhs);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248" refid="structtoml_1_1preserve__comments_1af1421503a57619ca2f765ca47edecea4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1a9a68dfa1ac6b1762835738786dbb3cf2" kindref="member">swap</ref>(<ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>lhs,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>lhs.comments.swap(rhs);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253" refid="structtoml_1_1preserve__comments_1a66590cf129a6a48a5c9d54ef66b153da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1a9a68dfa1ac6b1762835738786dbb3cf2" kindref="member">swap</ref>(std::vector&lt;std::string&gt;&amp;<sp/>lhs,<sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>lhs.swap(rhs.comments);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits&gt;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">std::basic_ostream&lt;charT,<sp/>traits&gt;&amp;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><ref refid="namespacetoml_1a11b17eff44b8e4b0b49c85cc34e241c7" kindref="member">operator&lt;&lt;</ref>(std::basic_ostream&lt;charT,<sp/>traits&gt;&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;<sp/>com)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>c<sp/>:<sp/>com)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>c<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>provide<sp/>the<sp/>same<sp/>interface<sp/>with<sp/>`preserve_comments`,<sp/>`discard_comments`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>have<sp/>an<sp/>iterator.<sp/>But<sp/>it<sp/>does<sp/>not<sp/>contain<sp/>anything,<sp/>so<sp/>we<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>add<sp/>an<sp/>iterator<sp/>that<sp/>points<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>always<sp/>points<sp/>null,<sp/>so<sp/>DO<sp/>NOT<sp/>unwrap<sp/>this<sp/>iterator.<sp/>It<sp/>always<sp/>crashes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>your<sp/>program.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_const&gt;</highlight></codeline>
<codeline lineno="280" refid="structtoml_1_1detail_1_1empty__iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref></highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282" refid="structtoml_1_1detail_1_1empty__iterator_1a9f1a4cc97e6da5a390a021e7e224646f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1detail_1_1empty__iterator_1a9f1a4cc97e6da5a390a021e7e224646f" kindref="member">value_type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="283" refid="structtoml_1_1detail_1_1empty__iterator_1afd8d138a3f8470c84e5555e5d0002600" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1detail_1_1empty__iterator_1afd8d138a3f8470c84e5555e5d0002600" kindref="member">reference_type</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::conditional&lt;is_const,<sp/>T<sp/>const&amp;,<sp/>T&amp;&gt;::type;</highlight></codeline>
<codeline lineno="284" refid="structtoml_1_1detail_1_1empty__iterator_1ac4841e4b798384b9e40a28c701189eec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1detail_1_1empty__iterator_1ac4841e4b798384b9e40a28c701189eec" kindref="member">pointer_type</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::conditional&lt;is_const,<sp/>T<sp/>const*,<sp/>T*&gt;::type;</highlight></codeline>
<codeline lineno="285" refid="structtoml_1_1detail_1_1empty__iterator_1a52043ae567fbca9752a880c764f17b3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1detail_1_1empty__iterator_1a52043ae567fbca9752a880c764f17b3b" kindref="member">difference_type</ref><sp/><sp/><sp/>=<sp/>std::ptrdiff_t;</highlight></codeline>
<codeline lineno="286" refid="structtoml_1_1detail_1_1empty__iterator_1ad4f2954ecc081e138e9ec964fa9e7af6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1detail_1_1empty__iterator_1ad4f2954ecc081e138e9ec964fa9e7af6" kindref="member">iterator_category</ref><sp/>=<sp/>std::random_access_iterator_tag;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="structtoml_1_1detail_1_1empty__iterator_1a6055dee805e8bd637dfece2e8321c241" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1a6055dee805e8bd637dfece2e8321c241" kindref="member">empty_iterator</ref>()<sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289" refid="structtoml_1_1detail_1_1empty__iterator_1a78d89516d755c2951faa1ea5ffd12363" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1a78d89516d755c2951faa1ea5ffd12363" kindref="member">~empty_iterator</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290" refid="structtoml_1_1detail_1_1empty__iterator_1a5418dc2fa747e49f0c6cc38781d431fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1a5418dc2fa747e49f0c6cc38781d431fd" kindref="member">empty_iterator</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291" refid="structtoml_1_1detail_1_1empty__iterator_1acebda47ed2afc471843b58c20ba4e508" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1acebda47ed2afc471843b58c20ba4e508" kindref="member">empty_iterator</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref><sp/>&amp;&amp;)<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292" refid="structtoml_1_1detail_1_1empty__iterator_1abcdf95298c996aa5c2cd2c3ec033df70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref>&amp;<sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1abcdf95298c996aa5c2cd2c3ec033df70" kindref="member">operator=</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293" refid="structtoml_1_1detail_1_1empty__iterator_1a561cceecac787eb4bab60319081cd057" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref>&amp;<sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1a561cceecac787eb4bab60319081cd057" kindref="member">operator=</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref><sp/>&amp;&amp;)<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DO<sp/>NOT<sp/>call<sp/>these<sp/>operators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="structtoml_1_1detail_1_1empty__iterator_1a0234cede9e0dff0e30ae7a8c9ff998e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1afd8d138a3f8470c84e5555e5d0002600" kindref="member">reference_type</ref><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1a0234cede9e0dff0e30ae7a8c9ff998e7" kindref="member">operator*</ref>()<sp/><sp/>const<sp/>noexcept<sp/>{std::terminate();}</highlight></codeline>
<codeline lineno="297" refid="structtoml_1_1detail_1_1empty__iterator_1a5642bc998d18cd25d9d12c6dce3a985d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1ac4841e4b798384b9e40a28c701189eec" kindref="member">pointer_type</ref><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1a5642bc998d18cd25d9d12c6dce3a985d" kindref="member">operator-&gt;</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="298" refid="structtoml_1_1detail_1_1empty__iterator_1a4bc711805315504bac8a65459bce2dc4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1afd8d138a3f8470c84e5555e5d0002600" kindref="member">reference_type</ref><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1a4bc711805315504bac8a65459bce2dc4" kindref="member">operator[]</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator_1a52043ae567fbca9752a880c764f17b3b" kindref="member">difference_type</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="structtoml_1_1detail_1_1empty__iterator_1a0234cede9e0dff0e30ae7a8c9ff998e7" kindref="member">operator*</ref>();}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>operators<sp/>do<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="structtoml_1_1detail_1_1empty__iterator_1aa4af3557a678228c4753e91712e22859" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref>&amp;<sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1aa4af3557a678228c4753e91712e22859" kindref="member">operator++</ref>()<sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="302" refid="structtoml_1_1detail_1_1empty__iterator_1ab06b83b28b4a223d737e6e76e14b68da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1ab06b83b28b4a223d737e6e76e14b68da" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="303" refid="structtoml_1_1detail_1_1empty__iterator_1a910a4cd9b59262e0c9d26903f6661d5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref>&amp;<sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1a910a4cd9b59262e0c9d26903f6661d5c" kindref="member">operator--</ref>()<sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="304" refid="structtoml_1_1detail_1_1empty__iterator_1aed57ef076c8d1e0b116d3c1786f39d50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1aed57ef076c8d1e0b116d3c1786f39d50" kindref="member">operator--</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="structtoml_1_1detail_1_1empty__iterator_1ab4d768294133163ecbe082fdc0ef97f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref>&amp;<sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1ab4d768294133163ecbe082fdc0ef97f5" kindref="member">operator+=</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator_1a52043ae567fbca9752a880c764f17b3b" kindref="member">difference_type</ref>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="307" refid="structtoml_1_1detail_1_1empty__iterator_1a9745d6d8f688d4b202bbe1323ebe1bee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref>&amp;<sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1a9745d6d8f688d4b202bbe1323ebe1bee" kindref="member">operator-=</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator_1a52043ae567fbca9752a880c764f17b3b" kindref="member">difference_type</ref>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="structtoml_1_1detail_1_1empty__iterator_1a571a62dc3e2a7b4272b91b23ded1f0c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1a571a62dc3e2a7b4272b91b23ded1f0c8" kindref="member">operator+</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator_1a52043ae567fbca9752a880c764f17b3b" kindref="member">difference_type</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="310" refid="structtoml_1_1detail_1_1empty__iterator_1a3382f51a45f4410789f85312614eaa57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator</ref><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1a3382f51a45f4410789f85312614eaa57" kindref="member">operator-</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator_1a52043ae567fbca9752a880c764f17b3b" kindref="member">difference_type</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="311"><highlight class="normal">};</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="314" refid="namespacetoml_1_1detail_1af32e4e42a39aa2b9fc2bd8e9d3f97cd8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1_1detail_1af32e4e42a39aa2b9fc2bd8e9d3f97cd8" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="316" refid="namespacetoml_1_1detail_1aa4437dc0ba9e506dec5d6922504fccb5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1_1detail_1aa4437dc0ba9e506dec5d6922504fccb5" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="318" refid="namespacetoml_1_1detail_1a020cb01199da9b349b09e05f732e4694" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1_1detail_1a020cb01199da9b349b09e05f732e4694" kindref="member">operator&lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="320" refid="namespacetoml_1_1detail_1adb0f553fbf0b2ddb642de75f9a2f1b84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1_1detail_1adb0f553fbf0b2ddb642de75f9a2f1b84" kindref="member">operator&lt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="322" refid="namespacetoml_1_1detail_1ab0aa1507d1ed1b957274d535fe27c42b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1_1detail_1ab0aa1507d1ed1b957274d535fe27c42b" kindref="member">operator&gt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="324" refid="namespacetoml_1_1detail_1af42e8bbe713ac03abc32455bde9bcd03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1_1detail_1af42e8bbe713ac03abc32455bde9bcd03" kindref="member">operator&gt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1a52043ae567fbca9752a880c764f17b3b" kindref="member">empty_iterator&lt;T, C&gt;::difference_type</ref></highlight></codeline>
<codeline lineno="328" refid="namespacetoml_1_1detail_1a04271fbec74a060a51131962bd435cf3" refkind="member"><highlight class="normal"><ref refid="namespacetoml_1_1detail_1a04271fbec74a060a51131962bd435cf3" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">empty_iterator&lt;T,<sp/>C&gt;</highlight></codeline>
<codeline lineno="332" refid="namespacetoml_1_1detail_1a5b66ed4b1104ca9dadeebd46820a535b" refkind="member"><highlight class="normal"><ref refid="namespacetoml_1_1detail_1a5b66ed4b1104ca9dadeebd46820a535b" kindref="member">operator+</ref>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1a52043ae567fbca9752a880c764f17b3b" kindref="member">empty_iterator&lt;T, C&gt;::difference_type</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rhs;}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">empty_iterator&lt;T,<sp/>C&gt;</highlight></codeline>
<codeline lineno="335" refid="namespacetoml_1_1detail_1a53775bd9a0cc806fe715db7953f72caa" refkind="member"><highlight class="normal"><ref refid="namespacetoml_1_1detail_1a5b66ed4b1104ca9dadeebd46820a535b" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">empty_iterator&lt;T, C&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator_1a52043ae567fbca9752a880c764f17b3b" kindref="member">empty_iterator&lt;T, C&gt;::difference_type</ref>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>default<sp/>comment<sp/>type.<sp/>It<sp/>discards<sp/>all<sp/>the<sp/>comments.<sp/>It<sp/>requires<sp/>only<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>byte<sp/>to<sp/>contain,<sp/>so<sp/>the<sp/>memory<sp/>footprint<sp/>is<sp/>smaller<sp/>than<sp/>preserve_comments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>just<sp/>ignores<sp/>`push_back`,<sp/>`insert`,<sp/>`erase`,<sp/>and<sp/>any<sp/>other<sp/>modifications.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IT<sp/>always<sp/>returns<sp/>size()<sp/>==<sp/>0,<sp/>the<sp/>iterator<sp/>taken<sp/>by<sp/>`begin()`<sp/>is<sp/>always<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>that<sp/>of<sp/>`end()`,<sp/>and<sp/>accessing<sp/>through<sp/>`operator[]`<sp/>or<sp/>iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/>always<sp/>causes<sp/>a<sp/>segmentation<sp/>fault.<sp/>DO<sp/>NOT<sp/>access<sp/>to<sp/>the<sp/>element<sp/>of<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Why<sp/>this<sp/>is<sp/>chose<sp/>as<sp/>the<sp/>default<sp/>type<sp/>is<sp/>because<sp/>the<sp/>last<sp/>version<sp/>(2.x.y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>does<sp/>not<sp/>contain<sp/>any<sp/>comments<sp/>in<sp/>a<sp/>value.<sp/>To<sp/>minimize<sp/>the<sp/>impact<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>efficiency,<sp/>this<sp/>is<sp/>chosen<sp/>as<sp/>a<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>reduce<sp/>the<sp/>memory<sp/>footprint,<sp/>later<sp/>we<sp/>can<sp/>try<sp/>empty<sp/>base<sp/>optimization<sp/>(EBO).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="structtoml_1_1discard__comments" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref></highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354" refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::size_t;</highlight></codeline>
<codeline lineno="355" refid="structtoml_1_1discard__comments_1ace384cea962939ee8daa86457e2b0177" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1discard__comments_1ace384cea962939ee8daa86457e2b0177" kindref="member">difference_type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::ptrdiff_t;</highlight></codeline>
<codeline lineno="356" refid="structtoml_1_1discard__comments_1a2c2e958054df31f5997f2fc43c829fb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1discard__comments_1a2c2e958054df31f5997f2fc43c829fb0" kindref="member">value_type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::string;</highlight></codeline>
<codeline lineno="357" refid="structtoml_1_1discard__comments_1aaebf4059da8e84eabf6c1129e36f54c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1discard__comments_1aaebf4059da8e84eabf6c1129e36f54c3" kindref="member">reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::string&amp;;</highlight></codeline>
<codeline lineno="358" refid="structtoml_1_1discard__comments_1a0333a4066d6853fe0f3b62c5bfc300ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1discard__comments_1a0333a4066d6853fe0f3b62c5bfc300ce" kindref="member">const_reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;;</highlight></codeline>
<codeline lineno="359" refid="structtoml_1_1discard__comments_1ab86fa50599b11437a54243bb84370ae0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1discard__comments_1ab86fa50599b11437a54243bb84370ae0" kindref="member">pointer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::string*;</highlight></codeline>
<codeline lineno="360" refid="structtoml_1_1discard__comments_1af10fea60bfc0bb44af3bc4cb0677067d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1discard__comments_1af10fea60bfc0bb44af3bc4cb0677067d" kindref="member">const_pointer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*;</highlight></codeline>
<codeline lineno="361" refid="structtoml_1_1discard__comments_1a34d9175c22073985c7e973f4ea4dd31b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">detail::empty_iterator&lt;std::string, false&gt;</ref>;</highlight></codeline>
<codeline lineno="362" refid="structtoml_1_1discard__comments_1ae93cfb7b2ffd2128694971bbd0ef5b31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">detail::empty_iterator&lt;std::string, true&gt;</ref>;</highlight></codeline>
<codeline lineno="363" refid="structtoml_1_1discard__comments_1a6bf4623f402c7cab2f9d7d19825f10bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">reverse_iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">detail::empty_iterator&lt;std::string, false&gt;</ref>;</highlight></codeline>
<codeline lineno="364" refid="structtoml_1_1discard__comments_1a633f05c319d929cb1962affca100200e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_reverse_iterator</ref><sp/>=<sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">detail::empty_iterator&lt;std::string, true&gt;</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="structtoml_1_1discard__comments_1a42663a637d1ab9bab824e9177d01beb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a42663a637d1ab9bab824e9177d01beb0" kindref="member">discard_comments</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367" refid="structtoml_1_1discard__comments_1ab86cf5cd7850df0a111cc1c4b3429741" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1ab86cf5cd7850df0a111cc1c4b3429741" kindref="member">~discard_comments</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368" refid="structtoml_1_1discard__comments_1a4efeb706722ac083ad93c3762e06cb73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a4efeb706722ac083ad93c3762e06cb73" kindref="member">discard_comments</ref>(<ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369" refid="structtoml_1_1discard__comments_1a221030bb500d414371e8c5795f1bb948" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a221030bb500d414371e8c5795f1bb948" kindref="member">discard_comments</ref>(<ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref><sp/>&amp;&amp;)<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370" refid="structtoml_1_1discard__comments_1a363af56d64004b9c763a94fe93436e82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;<sp/><ref refid="structtoml_1_1discard__comments_1a363af56d64004b9c763a94fe93436e82" kindref="member">operator=</ref>(<ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371" refid="structtoml_1_1discard__comments_1aa4de88dab919efdf9d88155e187dbaea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;<sp/><ref refid="structtoml_1_1discard__comments_1aa4de88dab919efdf9d88155e187dbaea" kindref="member">operator=</ref>(<ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref><sp/>&amp;&amp;)<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="structtoml_1_1discard__comments_1a33bd9ec9ac858c32968f4e3ac30c44d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1a33bd9ec9ac858c32968f4e3ac30c44d3" kindref="member">discard_comments</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="374" refid="structtoml_1_1discard__comments_1a1cddf47097c920eaceac0b38b467207a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1a1cddf47097c920eaceac0b38b467207a" kindref="member">discard_comments</ref>(std::vector&lt;std::string&gt;&amp;&amp;)<sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{}</highlight></codeline>
<codeline lineno="375" refid="structtoml_1_1discard__comments_1a9f39751a26bc84ebba27c2c96f363a2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;<sp/><ref refid="structtoml_1_1discard__comments_1a9f39751a26bc84ebba27c2c96f363a2d" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="376" refid="structtoml_1_1discard__comments_1a981d88263764f923214a337c097f2ea1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;<sp/><ref refid="structtoml_1_1discard__comments_1a981d88263764f923214a337c097f2ea1" kindref="member">operator=</ref>(std::vector&lt;std::string&gt;&amp;&amp;)<sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="structtoml_1_1discard__comments_1af9f1d2a30636f723bcf912a41c7e0d0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1af9f1d2a30636f723bcf912a41c7e0d0e" kindref="member">discard_comments</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1preserve__comments" kindref="compound">preserve_comments</ref>&amp;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="structtoml_1_1discard__comments_1ad66a95b8cb49d9455ae208317ed0f11d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1ad66a95b8cb49d9455ae208317ed0f11d" kindref="member">discard_comments</ref>(<ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="381" refid="structtoml_1_1discard__comments_1a6ee1d03607a11fc31837661b6f20e54a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a6ee1d03607a11fc31837661b6f20e54a" kindref="member">discard_comments</ref>(<ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="382" refid="structtoml_1_1discard__comments_1a2f6188656c0f15bb37fef9f023b59705" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a2f6188656c0f15bb37fef9f023b59705" kindref="member">discard_comments</ref>(std::initializer_list&lt;std::string&gt;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputIterator&gt;</highlight></codeline>
<codeline lineno="384" refid="structtoml_1_1discard__comments_1ae26136d55e7129e9bdabaf04c8bd4c1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1ae26136d55e7129e9bdabaf04c8bd4c1f" kindref="member">discard_comments</ref>(InputIterator,<sp/>InputIterator)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputIterator&gt;</highlight></codeline>
<codeline lineno="387" refid="structtoml_1_1discard__comments_1a87c511fb659ee1454dffd0f96631a3f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1a87c511fb659ee1454dffd0f96631a3f8" kindref="member">assign</ref>(InputIterator,<sp/>InputIterator)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="388" refid="structtoml_1_1discard__comments_1ae2a8e8b7acc25bb5dfcdb467e5492676" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1ae2a8e8b7acc25bb5dfcdb467e5492676" kindref="member">assign</ref>(std::initializer_list&lt;std::string&gt;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="389" refid="structtoml_1_1discard__comments_1a8167e1820abb50574544836643f93a04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1a8167e1820abb50574544836643f93a04" kindref="member">assign</ref>(<ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="structtoml_1_1discard__comments_1ab32391def59713e7e99517c3d07ab60a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1ab32391def59713e7e99517c3d07ab60a" kindref="member">insert</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref>{};}</highlight></codeline>
<codeline lineno="392" refid="structtoml_1_1discard__comments_1ad868e3c5d73b970a037d19b06ce374f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1ad868e3c5d73b970a037d19b06ce374f2" kindref="member">insert</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>,<sp/>std::string&amp;&amp;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref>{};}</highlight></codeline>
<codeline lineno="393" refid="structtoml_1_1discard__comments_1a89e16a0e5ad65ef56df2334417b89baa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1a89e16a0e5ad65ef56df2334417b89baa" kindref="member">insert</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>,<sp/><ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref>{};}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputIterator&gt;</highlight></codeline>
<codeline lineno="395" refid="structtoml_1_1discard__comments_1af0bc07b4d771c436258270971593fb43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1af0bc07b4d771c436258270971593fb43" kindref="member">insert</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>,<sp/>InputIterator,<sp/>InputIterator)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref>{};}</highlight></codeline>
<codeline lineno="396" refid="structtoml_1_1discard__comments_1a8d18a7114f93b4484f50e246d0ab5cc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1a8d18a7114f93b4484f50e246d0ab5cc3" kindref="member">insert</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>,<sp/>std::initializer_list&lt;std::string&gt;)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref>{};}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="399" refid="structtoml_1_1discard__comments_1adcab0832a954d33ef1faf3991aad7f9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1adcab0832a954d33ef1faf3991aad7f9c" kindref="member">emplace</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>,<sp/>Ts&amp;&amp;<sp/>...)<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref>{};}</highlight></codeline>
<codeline lineno="400" refid="structtoml_1_1discard__comments_1a11709634f00e1df4a8ac217f5ee8fcd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1a11709634f00e1df4a8ac217f5ee8fcd7" kindref="member">erase</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref>{};}</highlight></codeline>
<codeline lineno="401" refid="structtoml_1_1discard__comments_1aae028ac78ca649ca71783f342a76bd75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1aae028ac78ca649ca71783f342a76bd75" kindref="member">erase</ref>(<ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>,<sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref>{};}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="structtoml_1_1discard__comments_1aebeadd8a52403f084105bc1a70420453" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1aebeadd8a52403f084105bc1a70420453" kindref="member">swap</ref>(<ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="structtoml_1_1discard__comments_1ada1fe49d35200627884297734121b71e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1ada1fe49d35200627884297734121b71e" kindref="member">push_back</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="406" refid="structtoml_1_1discard__comments_1a73930f5a3618c5f8903647c9446966ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1a73930f5a3618c5f8903647c9446966ff" kindref="member">push_back</ref>(std::string&amp;&amp;<sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="407" refid="structtoml_1_1discard__comments_1ad4cd1784382bb79f7c767adc3a72a044" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1ad4cd1784382bb79f7c767adc3a72a044" kindref="member">pop_back</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="410" refid="structtoml_1_1discard__comments_1ae3cb0474333c677ad03cfc2adc5919f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1ae3cb0474333c677ad03cfc2adc5919f6" kindref="member">emplace_back</ref>(Ts&amp;&amp;<sp/>...)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="structtoml_1_1discard__comments_1aba10675773e02669c1c323006ab0a39e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1aba10675773e02669c1c323006ab0a39e" kindref="member">clear</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="structtoml_1_1discard__comments_1a3a3382348b3bd1fb1f2d6574960a8001" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref><sp/><ref refid="structtoml_1_1discard__comments_1a3a3382348b3bd1fb1f2d6574960a8001" kindref="member">size</ref>()<sp/><sp/><sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="415" refid="structtoml_1_1discard__comments_1a02805c0e2a42eaff92adb3e862133308" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref><sp/><ref refid="structtoml_1_1discard__comments_1a02805c0e2a42eaff92adb3e862133308" kindref="member">max_size</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="416" refid="structtoml_1_1discard__comments_1a8714b45fd25f7740a1e791d94ff8645d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref><sp/><ref refid="structtoml_1_1discard__comments_1a8714b45fd25f7740a1e791d94ff8645d" kindref="member">capacity</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="417" refid="structtoml_1_1discard__comments_1a12fa292c8fd8a7669e666e957ab3b998" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a12fa292c8fd8a7669e666e957ab3b998" kindref="member">empty</ref>()<sp/><sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="structtoml_1_1discard__comments_1a6b0551510cbd487e6ad283fbb7b27f99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1a6b0551510cbd487e6ad283fbb7b27f99" kindref="member">reserve</ref>(<ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="420" refid="structtoml_1_1discard__comments_1a09c3d6f96f89ee0ad2e74a05fa9c25f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1a09c3d6f96f89ee0ad2e74a05fa9c25f7" kindref="member">resize</ref>(<ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="421" refid="structtoml_1_1discard__comments_1a6be3907c469b84d9d2fa532a3a5d2c01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1a6be3907c469b84d9d2fa532a3a5d2c01" kindref="member">resize</ref>(<ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="422" refid="structtoml_1_1discard__comments_1a364056118aae025b1afa0fd704a12854" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1a364056118aae025b1afa0fd704a12854" kindref="member">shrink_to_fit</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DO<sp/>NOT<sp/>access<sp/>to<sp/>the<sp/>element<sp/>of<sp/>this<sp/>container.<sp/>This<sp/>container<sp/>is<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty,<sp/>so<sp/>accessing<sp/>through<sp/>operator[],<sp/>front/back,<sp/>data<sp/>causes<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="structtoml_1_1discard__comments_1a094add2b8544cec13501aed3a9994a17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1aaebf4059da8e84eabf6c1129e36f54c3" kindref="member">reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a094add2b8544cec13501aed3a9994a17" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="structtoml_1_1discard__comments_1a95f0e294de7e0116e589b0decc4ca96d" kindref="member">data</ref>();}</highlight></codeline>
<codeline lineno="429" refid="structtoml_1_1discard__comments_1a8c2d6626f4efa7f488a28e13ad717c98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a0333a4066d6853fe0f3b62c5bfc300ce" kindref="member">const_reference</ref><sp/><ref refid="structtoml_1_1discard__comments_1a8c2d6626f4efa7f488a28e13ad717c98" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="structtoml_1_1discard__comments_1a95f0e294de7e0116e589b0decc4ca96d" kindref="member">data</ref>();}</highlight></codeline>
<codeline lineno="430" refid="structtoml_1_1discard__comments_1a7baa29b39d1960a392cb71ec4ecbdb49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1aaebf4059da8e84eabf6c1129e36f54c3" kindref="member">reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a7baa29b39d1960a392cb71ec4ecbdb49" kindref="member">at</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;toml::discard_comment<sp/>is<sp/>always<sp/>empty.&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="431" refid="structtoml_1_1discard__comments_1a4f615bfca432e0389630b7ddb0142957" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a0333a4066d6853fe0f3b62c5bfc300ce" kindref="member">const_reference</ref><sp/><ref refid="structtoml_1_1discard__comments_1a4f615bfca432e0389630b7ddb0142957" kindref="member">at</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments_1a56ea098784a9d1e3a9ecb8ba69fb9462" kindref="member">size_type</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;toml::discard_comment<sp/>is<sp/>always<sp/>empty.&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="432" refid="structtoml_1_1discard__comments_1affec86e3c4720f176e1fb3769c58a9da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1aaebf4059da8e84eabf6c1129e36f54c3" kindref="member">reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1affec86e3c4720f176e1fb3769c58a9da" kindref="member">front</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="structtoml_1_1discard__comments_1a95f0e294de7e0116e589b0decc4ca96d" kindref="member">data</ref>();}</highlight></codeline>
<codeline lineno="433" refid="structtoml_1_1discard__comments_1a3ff5b4d3b124970303e54e605e314e8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a0333a4066d6853fe0f3b62c5bfc300ce" kindref="member">const_reference</ref><sp/><ref refid="structtoml_1_1discard__comments_1a3ff5b4d3b124970303e54e605e314e8f" kindref="member">front</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="structtoml_1_1discard__comments_1a95f0e294de7e0116e589b0decc4ca96d" kindref="member">data</ref>();}</highlight></codeline>
<codeline lineno="434" refid="structtoml_1_1discard__comments_1a93482ee700acdac84cc90363b83fa79d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1aaebf4059da8e84eabf6c1129e36f54c3" kindref="member">reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a93482ee700acdac84cc90363b83fa79d" kindref="member">back</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="structtoml_1_1discard__comments_1a95f0e294de7e0116e589b0decc4ca96d" kindref="member">data</ref>();}</highlight></codeline>
<codeline lineno="435" refid="structtoml_1_1discard__comments_1a4308122f4784ad30322e47e5e909e157" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a0333a4066d6853fe0f3b62c5bfc300ce" kindref="member">const_reference</ref><sp/><ref refid="structtoml_1_1discard__comments_1a4308122f4784ad30322e47e5e909e157" kindref="member">back</ref>()<sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="structtoml_1_1discard__comments_1a95f0e294de7e0116e589b0decc4ca96d" kindref="member">data</ref>();}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="structtoml_1_1discard__comments_1a95f0e294de7e0116e589b0decc4ca96d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1ab86fa50599b11437a54243bb84370ae0" kindref="member">pointer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a95f0e294de7e0116e589b0decc4ca96d" kindref="member">data</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="438" refid="structtoml_1_1discard__comments_1afb30e4a2bb7e616e8dd8ba2a097899dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1af10fea60bfc0bb44af3bc4cb0677067d" kindref="member">const_pointer</ref><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1afb30e4a2bb7e616e8dd8ba2a097899dd" kindref="member">data</ref>()<sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="structtoml_1_1discard__comments_1a9f6d7dfdcc0e670b633b832eccd77e2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a9f6d7dfdcc0e670b633b832eccd77e2a" kindref="member">begin</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref>{};}</highlight></codeline>
<codeline lineno="441" refid="structtoml_1_1discard__comments_1a7f45f81179c1702e12b759ce2de818cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a7f45f81179c1702e12b759ce2de818cc" kindref="member">end</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref>{};}</highlight></codeline>
<codeline lineno="442" refid="structtoml_1_1discard__comments_1a941831a98a8dce7bdf8600e73942683f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1a941831a98a8dce7bdf8600e73942683f" kindref="member">begin</ref>()<sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>{};}</highlight></codeline>
<codeline lineno="443" refid="structtoml_1_1discard__comments_1abddcba08307e3047710ae02dbb8e5dd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1abddcba08307e3047710ae02dbb8e5dd9" kindref="member">end</ref>()<sp/><sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>{};}</highlight></codeline>
<codeline lineno="444" refid="structtoml_1_1discard__comments_1a965ecbc676ffb7e8130c5b82ea0a2380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1a965ecbc676ffb7e8130c5b82ea0a2380" kindref="member">cbegin</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>{};}</highlight></codeline>
<codeline lineno="445" refid="structtoml_1_1discard__comments_1a7e307d3097df07ed2dc219f50bdeeba7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1a7e307d3097df07ed2dc219f50bdeeba7" kindref="member">cend</ref>()<sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>{};}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="structtoml_1_1discard__comments_1a8363d829cd239f5c56c87c492bf85bd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">reverse_iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a8363d829cd239f5c56c87c492bf85bd3" kindref="member">rbegin</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref>{};}</highlight></codeline>
<codeline lineno="448" refid="structtoml_1_1discard__comments_1a94e7560f7d1247536689b9f89f239eb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">reverse_iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1discard__comments_1a94e7560f7d1247536689b9f89f239eb5" kindref="member">rend</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">iterator</ref>{};}</highlight></codeline>
<codeline lineno="449" refid="structtoml_1_1discard__comments_1ac2eb159f70facf530e774608c41af354" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_reverse_iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1ac2eb159f70facf530e774608c41af354" kindref="member">rbegin</ref>()<sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>{};}</highlight></codeline>
<codeline lineno="450" refid="structtoml_1_1discard__comments_1a26333b47ad4a3a0b34fd9ab217dc913c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_reverse_iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1a26333b47ad4a3a0b34fd9ab217dc913c" kindref="member">rend</ref>()<sp/><sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>{};}</highlight></codeline>
<codeline lineno="451" refid="structtoml_1_1discard__comments_1a1a0c08e19a02cbda17c8de758843877d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_reverse_iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1a1a0c08e19a02cbda17c8de758843877d" kindref="member">crbegin</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>{};}</highlight></codeline>
<codeline lineno="452" refid="structtoml_1_1discard__comments_1a5ceb534f93a634f8121462949976777b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_reverse_iterator</ref><sp/><ref refid="structtoml_1_1discard__comments_1a5ceb534f93a634f8121462949976777b" kindref="member">crend</ref>()<sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1empty__iterator" kindref="compound">const_iterator</ref>{};}</highlight></codeline>
<codeline lineno="453"><highlight class="normal">};</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="namespacetoml_1adb529196c2e96a3fb9e7e3312e8c3bd6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1ae9ac58857cfdda9535ef98266b65304b" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="456" refid="namespacetoml_1a8e072d28431579b3e29c5ea7540b1739" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1a03e338a600f118cd5c5d3e7fee31f6c6" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="457" refid="namespacetoml_1acff0600d173e48338f29640944373ec7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1acbb3a32f389eaf9e5097d2b23df77b4e" kindref="member">operator&lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="458" refid="namespacetoml_1aa055e6672bbd43f0c55490ea790aee05" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1a17f8791df6efda2a712efa14c334c33d" kindref="member">operator&lt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="459" refid="namespacetoml_1abaa21c973a2dc580e1206ffe5df5ed3f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1a993726b0c054cbf5b20674f14690d6ed" kindref="member">operator&gt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="460" refid="namespacetoml_1a3b93e814b03bda1169fe6654e4ba392f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1a6b51fe3d00e083b549644d994bd547c7" kindref="member">operator&gt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="namespacetoml_1a440be2d49eb0d5d2cf3bd87b65e19e5a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1a9a68dfa1ac6b1762835738786dbb3cf2" kindref="member">swap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1discard__comments" kindref="compound">discard_comments</ref>&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits&gt;</highlight></codeline>
<codeline lineno="465"><highlight class="normal">std::basic_ostream&lt;charT,<sp/>traits&gt;&amp;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><ref refid="namespacetoml_1a11b17eff44b8e4b0b49c85cc34e241c7" kindref="member">operator&lt;&lt;</ref>(std::basic_ostream&lt;charT,<sp/>traits&gt;&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>discard_comments&amp;)</highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>toml11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">//<sp/>TOML11_COMMENTS_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="external/toml/comments.hpp"/>
  </compounddef>
</doxygen>
