<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="color_8hpp" kind="file" language="C++">
    <compoundname>color.hpp</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">ostream</includes>
    <includedby refid="region_8hpp" local="yes">external/toml/region.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>external/toml/color.hpp</label>
        <link refid="color_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="3">
        <label>ostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9">
        <label>Game/Game.cpp</label>
        <link refid="_game_8cpp"/>
      </node>
      <node id="8">
        <label>Game/Game.hpp</label>
        <link refid="_game_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Player/Player.cpp</label>
        <link refid="_player_8cpp"/>
      </node>
      <node id="13">
        <label>Player/Player.hpp</label>
        <link refid="_player_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>SettingsManager/SettingsManager.cpp</label>
        <link refid="_settings_manager_8cpp"/>
      </node>
      <node id="7">
        <label>SettingsManager/SettingsManager.hpp</label>
        <link refid="_settings_manager_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>SpriteContoller/SpriteController.cpp</label>
        <link refid="_sprite_controller_8cpp"/>
      </node>
      <node id="12">
        <label>SpriteContoller/SpriteController.hpp</label>
        <link refid="_sprite_controller_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>external/toml.hpp</label>
        <link refid="toml_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>external/toml/color.hpp</label>
        <link refid="color_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>external/toml/combinator.hpp</label>
        <link refid="combinator_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>external/toml/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>external/toml/get.hpp</label>
        <link refid="get_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>external/toml/lexer.hpp</label>
        <link refid="lexer_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>external/toml/literal.hpp</label>
        <link refid="literal_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>external/toml/parser.hpp</label>
        <link refid="parser_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>external/toml/region.hpp</label>
        <link refid="region_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>external/toml/serializer.hpp</label>
        <link refid="serializer_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>external/toml/source_location.hpp</label>
        <link refid="source__location_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>external/toml/value.hpp</label>
        <link refid="value_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacetoml">toml</innernamespace>
    <innernamespace refid="namespacetoml_1_1color__ansi">toml::color_ansi</innernamespace>
    <innernamespace refid="namespacetoml_1_1color__ansi_1_1detail">toml::color_ansi::detail</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="color_8hpp_1a63d2da22da25b1656684d1514d81f4dc" prot="public" static="no">
        <name>TOML11_ERROR_MESSAGE_COLORIZED</name>
        <initializer>false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="external/toml/color.hpp" line="9" column="10" bodyfile="external/toml/color.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TOML11_COLOR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOML11_COLOR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TOML11_COLORIZE_ERROR_MESSAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOML11_ERROR_MESSAGE_COLORIZED<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="color_8hpp_1a63d2da22da25b1656684d1514d81f4dc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOML11_ERROR_MESSAGE_COLORIZED<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="namespacetoml" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetoml" kindref="compound">toml</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>put<sp/>ANSI<sp/>escape<sp/>sequence<sp/>to<sp/>ostream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="namespacetoml_1_1color__ansi" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">color_ansi</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18" refid="namespacetoml_1_1color__ansi_1_1detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20" refid="namespacetoml_1_1color__ansi_1_1detail_1ad8cb594ca9d736802cbfec21812b8a83" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1_1color__ansi_1_1detail_1ad8cb594ca9d736802cbfec21812b8a83" kindref="member">colorize_index</ref>()</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>std::ios_base::xalloc();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="namespacetoml_1_1color__ansi_1a6e1ecccc13035c2997d726599056a16e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacetoml_1_1color__ansi_1a6e1ecccc13035c2997d726599056a16e" kindref="member">colorize</ref>(std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>default,<sp/>it<sp/>is<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>os.iword(<ref refid="namespacetoml_1_1color__ansi_1_1detail_1ad8cb594ca9d736802cbfec21812b8a83" kindref="member">detail::colorize_index</ref>())<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33" refid="namespacetoml_1_1color__ansi_1a58e9623eaa14637162672aaf66107aae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacetoml_1_1color__ansi_1a58e9623eaa14637162672aaf66107aae" kindref="member">nocolorize</ref>(std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>os.iword(<ref refid="namespacetoml_1_1color__ansi_1_1detail_1ad8cb594ca9d736802cbfec21812b8a83" kindref="member">detail::colorize_index</ref>())<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38" refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">reset</ref><sp/><sp/>(std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(os.iword(<ref refid="namespacetoml_1_1color__ansi_1_1detail_1ad8cb594ca9d736802cbfec21812b8a83" kindref="member">detail::colorize_index</ref>())<sp/>==<sp/>1)<sp/>{os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[00m&quot;</highlight><highlight class="normal">;}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;}</highlight></codeline>
<codeline lineno="40" refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">bold</ref><sp/><sp/><sp/>(std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(os.iword(<ref refid="namespacetoml_1_1color__ansi_1_1detail_1ad8cb594ca9d736802cbfec21812b8a83" kindref="member">detail::colorize_index</ref>())<sp/>==<sp/>1)<sp/>{os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[01m&quot;</highlight><highlight class="normal">;}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;}</highlight></codeline>
<codeline lineno="42" refid="namespacetoml_1_1color__ansi_1a4bc1cc5c9fa9feea28e31bbadd05a4e5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacetoml_1_1color__ansi_1a4bc1cc5c9fa9feea28e31bbadd05a4e5" kindref="member">grey</ref><sp/><sp/><sp/>(std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(os.iword(<ref refid="namespacetoml_1_1color__ansi_1_1detail_1ad8cb594ca9d736802cbfec21812b8a83" kindref="member">detail::colorize_index</ref>())<sp/>==<sp/>1)<sp/>{os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[30m&quot;</highlight><highlight class="normal">;}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;}</highlight></codeline>
<codeline lineno="44" refid="namespacetoml_1_1color__ansi_1aac70aec9b5ba7000caaefcd4dcdc44e6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacetoml_1_1color__ansi_1aac70aec9b5ba7000caaefcd4dcdc44e6" kindref="member">red</ref><sp/><sp/><sp/><sp/>(std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(os.iword(<ref refid="namespacetoml_1_1color__ansi_1_1detail_1ad8cb594ca9d736802cbfec21812b8a83" kindref="member">detail::colorize_index</ref>())<sp/>==<sp/>1)<sp/>{os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[31m&quot;</highlight><highlight class="normal">;}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;}</highlight></codeline>
<codeline lineno="46" refid="namespacetoml_1_1color__ansi_1a1bc7bd65ab0ec33ec28a3324e99008b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacetoml_1_1color__ansi_1a1bc7bd65ab0ec33ec28a3324e99008b6" kindref="member">green</ref><sp/><sp/>(std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(os.iword(<ref refid="namespacetoml_1_1color__ansi_1_1detail_1ad8cb594ca9d736802cbfec21812b8a83" kindref="member">detail::colorize_index</ref>())<sp/>==<sp/>1)<sp/>{os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[32m&quot;</highlight><highlight class="normal">;}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;}</highlight></codeline>
<codeline lineno="48" refid="namespacetoml_1_1color__ansi_1a3d86cfe2652ee82167ae548dea630a34" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacetoml_1_1color__ansi_1a3d86cfe2652ee82167ae548dea630a34" kindref="member">yellow</ref><sp/>(std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(os.iword(<ref refid="namespacetoml_1_1color__ansi_1_1detail_1ad8cb594ca9d736802cbfec21812b8a83" kindref="member">detail::colorize_index</ref>())<sp/>==<sp/>1)<sp/>{os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[33m&quot;</highlight><highlight class="normal">;}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;}</highlight></codeline>
<codeline lineno="50" refid="namespacetoml_1_1color__ansi_1a2b1a36bda005425861cb71d6b754f12e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacetoml_1_1color__ansi_1a2b1a36bda005425861cb71d6b754f12e" kindref="member">blue</ref><sp/><sp/><sp/>(std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(os.iword(<ref refid="namespacetoml_1_1color__ansi_1_1detail_1ad8cb594ca9d736802cbfec21812b8a83" kindref="member">detail::colorize_index</ref>())<sp/>==<sp/>1)<sp/>{os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[34m&quot;</highlight><highlight class="normal">;}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;}</highlight></codeline>
<codeline lineno="52" refid="namespacetoml_1_1color__ansi_1a166f5c695c805e111594f404ae36f9cd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacetoml_1_1color__ansi_1a166f5c695c805e111594f404ae36f9cd" kindref="member">magenta</ref>(std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(os.iword(<ref refid="namespacetoml_1_1color__ansi_1_1detail_1ad8cb594ca9d736802cbfec21812b8a83" kindref="member">detail::colorize_index</ref>())<sp/>==<sp/>1)<sp/>{os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[35m&quot;</highlight><highlight class="normal">;}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;}</highlight></codeline>
<codeline lineno="54" refid="namespacetoml_1_1color__ansi_1aadeae66f4f419c95f414a16fa7b4f44a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacetoml_1_1color__ansi_1aadeae66f4f419c95f414a16fa7b4f44a" kindref="member">cyan</ref><sp/><sp/><sp/>(std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(os.iword(<ref refid="namespacetoml_1_1color__ansi_1_1detail_1ad8cb594ca9d736802cbfec21812b8a83" kindref="member">detail::colorize_index</ref>())<sp/>==<sp/>1)<sp/>{os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[36m&quot;</highlight><highlight class="normal">;}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;}</highlight></codeline>
<codeline lineno="56" refid="namespacetoml_1_1color__ansi_1a633c6d497f0179cdacafd9e599c1608c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacetoml_1_1color__ansi_1a633c6d497f0179cdacafd9e599c1608c" kindref="member">white</ref><sp/><sp/>(std::ostream&amp;<sp/>os)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(os.iword(<ref refid="namespacetoml_1_1color__ansi_1_1detail_1ad8cb594ca9d736802cbfec21812b8a83" kindref="member">detail::colorize_index</ref>())<sp/>==<sp/>1)<sp/>{os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[37m&quot;</highlight><highlight class="normal">;}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>color_ansi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ANSI<sp/>escape<sp/>sequence<sp/>is<sp/>the<sp/>only<sp/>and<sp/>default<sp/>colorization<sp/>method<sp/>currently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">color<sp/>=<sp/>color_ansi;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>toml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">//<sp/>TOML11_COLOR_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="external/toml/color.hpp"/>
  </compounddef>
</doxygen>
