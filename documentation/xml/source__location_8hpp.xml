<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="source__location_8hpp" kind="file" language="C++">
    <compoundname>source_location.hpp</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">sstream</includes>
    <includes refid="region_8hpp" local="yes">region.hpp</includes>
    <includedby refid="exception_8hpp" local="yes">external/toml/exception.hpp</includedby>
    <includedby refid="value_8hpp" local="yes">external/toml/value.hpp</includedby>
    <incdepgraph>
      <node id="12">
        <label>color.hpp</label>
        <link refid="color_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>region.hpp</label>
        <link refid="region_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>external/toml/source_location.hpp</label>
        <link refid="source__location_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>algorithm</label>
      </node>
      <node id="11">
        <label>cassert</label>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="8">
        <label>initializer_list</label>
      </node>
      <node id="10">
        <label>iomanip</label>
      </node>
      <node id="9">
        <label>iterator</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="13">
        <label>ostream</label>
      </node>
      <node id="3">
        <label>sstream</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>Game/Game.cpp</label>
        <link refid="_game_8cpp"/>
      </node>
      <node id="7">
        <label>Game/Game.hpp</label>
        <link refid="_game_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Player/Player.cpp</label>
        <link refid="_player_8cpp"/>
      </node>
      <node id="12">
        <label>Player/Player.hpp</label>
        <link refid="_player_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>SettingsManager/SettingsManager.cpp</label>
        <link refid="_settings_manager_8cpp"/>
      </node>
      <node id="6">
        <label>SettingsManager/SettingsManager.hpp</label>
        <link refid="_settings_manager_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>SpriteContoller/SpriteController.cpp</label>
        <link refid="_sprite_controller_8cpp"/>
      </node>
      <node id="11">
        <label>SpriteContoller/SpriteController.hpp</label>
        <link refid="_sprite_controller_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>external/toml.hpp</label>
        <link refid="toml_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>external/toml/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>external/toml/get.hpp</label>
        <link refid="get_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>external/toml/literal.hpp</label>
        <link refid="literal_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>external/toml/parser.hpp</label>
        <link refid="parser_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>external/toml/serializer.hpp</label>
        <link refid="serializer_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>external/toml/source_location.hpp</label>
        <link refid="source__location_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>external/toml/value.hpp</label>
        <link refid="value_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structtoml_1_1source__location" prot="public">toml::source_location</innerclass>
    <innernamespace refid="namespacetoml">toml</innernamespace>
    <innernamespace refid="namespacetoml_1_1detail">toml::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Toru<sp/>Niina<sp/>2019.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TOML11_SOURCE_LOCATION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOML11_SOURCE_LOCATION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="region_8hpp" kindref="compound">region.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetoml" kindref="compound">toml</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>struct<sp/>to<sp/>contain<sp/>location<sp/>in<sp/>a<sp/>toml<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>interface<sp/>imitates<sp/>std::experimental::source_location,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>not<sp/>completely<sp/>the<sp/>same.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>would<sp/>be<sp/>constructed<sp/>by<sp/>toml::value.<sp/>It<sp/>can<sp/>be<sp/>used<sp/>to<sp/>generate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>user-defined<sp/>error<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>std::uint_least32_t<sp/>line()<sp/>const<sp/>noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>returns<sp/>the<sp/>line<sp/>number<sp/>where<sp/>the<sp/>region<sp/>is<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>std::uint_least32_t<sp/>column()<sp/>const<sp/>noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>returns<sp/>the<sp/>column<sp/>number<sp/>where<sp/>the<sp/>region<sp/>starts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>std::uint_least32_t<sp/>region()<sp/>const<sp/>noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>returns<sp/>the<sp/>size<sp/>of<sp/>the<sp/>region.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>+--<sp/>line()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+--<sp/>region<sp/>of<sp/>interest<sp/>(region()<sp/>==<sp/>9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>v<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.---+---.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>12<sp/>|<sp/>value<sp/>=<sp/>&quot;foo<sp/>bar&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>^</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+--<sp/>column()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>std::string<sp/>const&amp;<sp/>file_name()<sp/>const<sp/>noexcept;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>name<sp/>of<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>std::string<sp/>const&amp;<sp/>line_str()<sp/>const<sp/>noexcept;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>the<sp/>whole<sp/>line<sp/>that<sp/>contains<sp/>the<sp/>region<sp/>of<sp/>interest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structtoml_1_1source__location" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="structtoml_1_1source__location_1aae50d4f17890b39cd20741581a3a737e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1source__location_1aae50d4f17890b39cd20741581a3a737e" kindref="member">source_location</ref>()</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>line_num_(1),<sp/>column_num_(1),<sp/>region_size_(1),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_name_(</highlight><highlight class="stringliteral">&quot;unknown<sp/>file&quot;</highlight><highlight class="normal">),<sp/>line_str_(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structtoml_1_1source__location_1a725dde5bd1f81f1b864ae493e238204a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1source__location_1a725dde5bd1f81f1b864ae493e238204a" kindref="member">source_location</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1region__base" kindref="compound">detail::region_base</ref>*<sp/>reg)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>line_num_(1),<sp/>column_num_(1),<sp/>region_size_(1),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_name_(</highlight><highlight class="stringliteral">&quot;unknown<sp/>file&quot;</highlight><highlight class="normal">),<sp/>line_str_(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reg)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reg-&gt;<ref refid="structtoml_1_1detail_1_1region__base_1ad676f2456819ebd43cc6402f017c3ff8" kindref="member">line_num</ref>()<sp/>!=<sp/><ref refid="structtoml_1_1detail_1_1region__base" kindref="compound">detail::region_base</ref>().<ref refid="structtoml_1_1detail_1_1region__base_1ad676f2456819ebd43cc6402f017c3ff8" kindref="member">line_num</ref>())</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_num_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::uint_least32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stoul(reg-&gt;<ref refid="structtoml_1_1detail_1_1region__base_1ad676f2456819ebd43cc6402f017c3ff8" kindref="member">line_num</ref>()));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_num_<sp/><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::uint_least32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(reg-&gt;<ref refid="structtoml_1_1detail_1_1region__base_1a5d9badf7c1617c3dbf220128beed9e69" kindref="member">before</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_size_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::uint_least32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(reg-&gt;<ref refid="structtoml_1_1detail_1_1region__base_1abb3aa3ca6b0a0cd80e257ceb2a83877c" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_name_<sp/><sp/><sp/>=<sp/>reg-&gt;<ref refid="structtoml_1_1detail_1_1region__base_1af1e9c07f9510f553e33277207249b980" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_str_<sp/><sp/><sp/><sp/>=<sp/>reg-&gt;<ref refid="structtoml_1_1detail_1_1region__base_1a94f53e54f87a6b18b673c93c5c16c5b1" kindref="member">line</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structtoml_1_1source__location_1a13ac40c2252efdaf517d173d176d655f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1source__location_1a13ac40c2252efdaf517d173d176d655f" kindref="member">source_location</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1region" kindref="compound">detail::region</ref>&amp;<sp/>reg)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>line_num_(static_cast&lt;std::uint_least32_t&gt;(std::stoul(reg.line_num()))),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_num_(static_cast&lt;std::uint_least32_t&gt;(reg.before()<sp/>+<sp/>1)),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_size_(static_cast&lt;std::uint_least32_t&gt;(reg.size())),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_name_(reg.name()),</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_str_<sp/>(reg.<ref refid="structtoml_1_1source__location_1a5d102e507cca2f75dadbc18a797f1c4c" kindref="member">line</ref>())</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="72" refid="structtoml_1_1source__location_1a395083a9e3b611083b1ce2e05e0c5a53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1source__location_1a395083a9e3b611083b1ce2e05e0c5a53" kindref="member">source_location</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1detail_1_1location" kindref="compound">detail::location</ref>&amp;<sp/>loc)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>line_num_(static_cast&lt;std::uint_least32_t&gt;(std::stoul(loc.line_num()))),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_num_(static_cast&lt;std::uint_least32_t&gt;(loc.before()<sp/>+<sp/>1)),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_size_(static_cast&lt;std::uint_least32_t&gt;(loc.size())),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_name_(loc.name()),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_str_<sp/>(loc.<ref refid="structtoml_1_1source__location_1a5d102e507cca2f75dadbc18a797f1c4c" kindref="member">line</ref>())</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structtoml_1_1source__location_1a6d846958faefc95bbd78feda0a5cb842" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1source__location_1a6d846958faefc95bbd78feda0a5cb842" kindref="member">~source_location</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81" refid="structtoml_1_1source__location_1a0bc8f34db7b888042c66f85ac6a1e974" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1source__location_1a0bc8f34db7b888042c66f85ac6a1e974" kindref="member">source_location</ref>(<ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82" refid="structtoml_1_1source__location_1a8d8336394ba0d157bc0a8d804b0c6eba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1source__location_1a8d8336394ba0d157bc0a8d804b0c6eba" kindref="member">source_location</ref>(<ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref><sp/>&amp;&amp;)<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83" refid="structtoml_1_1source__location_1a36db8b33e030793ab9901a62c203cb75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref>&amp;<sp/><ref refid="structtoml_1_1source__location_1a36db8b33e030793ab9901a62c203cb75" kindref="member">operator=</ref>(<ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84" refid="structtoml_1_1source__location_1abc87f7adc367477a733bf41556a41804" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref>&amp;<sp/><ref refid="structtoml_1_1source__location_1abc87f7adc367477a733bf41556a41804" kindref="member">operator=</ref>(<ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref><sp/>&amp;&amp;)<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structtoml_1_1source__location_1a5d102e507cca2f75dadbc18a797f1c4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint_least32_t<sp/><ref refid="structtoml_1_1source__location_1a5d102e507cca2f75dadbc18a797f1c4c" kindref="member">line</ref>()<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>line_num_;}</highlight></codeline>
<codeline lineno="87" refid="structtoml_1_1source__location_1a77c60f2dfe88dca8c78032cbb5f26fde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint_least32_t<sp/><ref refid="structtoml_1_1source__location_1a77c60f2dfe88dca8c78032cbb5f26fde" kindref="member">column</ref>()<sp/><sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>column_num_;}</highlight></codeline>
<codeline lineno="88" refid="structtoml_1_1source__location_1a378a57f56208219c5c3205713c0fa272" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint_least32_t<sp/><ref refid="structtoml_1_1source__location_1a378a57f56208219c5c3205713c0fa272" kindref="member">region</ref>()<sp/><sp/><sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>region_size_;}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="structtoml_1_1source__location_1a981e64ae5ff2ee9ca10df468ea7a1fd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><sp/><ref refid="structtoml_1_1source__location_1a981e64ae5ff2ee9ca10df468ea7a1fd5" kindref="member">file_name</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file_name_;}</highlight></codeline>
<codeline lineno="91" refid="structtoml_1_1source__location_1ac4354c562704e9873f63e83464fdd135" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><sp/><ref refid="structtoml_1_1source__location_1ac4354c562704e9873f63e83464fdd135" kindref="member">line_str</ref>()<sp/><sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>line_str_;}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint_least32_t<sp/>line_num_;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint_least32_t<sp/>column_num_;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint_least32_t<sp/>region_size_;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_name_;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_str_;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>internal<sp/>error<sp/>message<sp/>generation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="namespacetoml_1_1detail_1ada573c450f0429aedaae47101e581ac8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespacetoml_1_1detail_1ada573c450f0429aedaae47101e581ac8" kindref="member">format_underline</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::pair&lt;source_location,<sp/>std::string&gt;&gt;&amp;<sp/>loc_com,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>helps<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetoml_1_1color__ansi_1a6e1ecccc13035c2997d726599056a16e" kindref="member">colorize</ref><sp/>=<sp/><ref refid="color_8hpp_1a63d2da22da25b1656684d1514d81f4dc" kindref="member">TOML11_ERROR_MESSAGE_COLORIZED</ref>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>line_num_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lc<sp/>:<sp/>loc_com)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uint_least32_t<sp/>line<sp/>=<sp/>lc.first.line();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(line<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/><sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digit<sp/>+=<sp/><sp/>1;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_num_width<sp/>=<sp/>(std::max)(line_num_width,<sp/>digit);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>is<sp/>the<sp/>minimum<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>line_num_width<sp/>=<sp/>std::max&lt;std::size_t&gt;(line_num_width,<sp/>1);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>retval;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacetoml_1_1color__ansi_1a6e1ecccc13035c2997d726599056a16e" kindref="member">colorize</ref>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a6e1ecccc13035c2997d726599056a16e" kindref="member">color::colorize</ref>;<sp/></highlight><highlight class="comment">//<sp/>turn<sp/>on<sp/>ANSI<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XXX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here,<sp/>before<sp/>`colorize`<sp/>support,<sp/>it<sp/>does<sp/>not<sp/>output<sp/>`[error]`<sp/>prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>automatically.<sp/>So<sp/>some<sp/>user<sp/>may<sp/>output<sp/>it<sp/>manually<sp/>and<sp/>this<sp/>change<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>duplicate<sp/>the<sp/>prefix.<sp/>To<sp/>avoid<sp/>it,<sp/>check<sp/>the<sp/>first<sp/>7<sp/>characters<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>is<sp/>&quot;[error]&quot;,<sp/>it<sp/>removes<sp/>that<sp/>part<sp/>from<sp/>the<sp/>message<sp/>shown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(message.size()<sp/>&gt;<sp/>7<sp/>&amp;&amp;<sp/>message.substr(0,<sp/>7)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;[error]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1aac70aec9b5ba7000caaefcd4dcdc44e6" kindref="member">color::red</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[error]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/>message.substr(7)<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1aac70aec9b5ba7000caaefcd4dcdc44e6" kindref="member">color::red</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[error]<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/>message<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format_one_location<sp/>=<sp/>[line_num_width]</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::ostringstream&amp;<sp/>oss,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>source_location&amp;<sp/>loc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>comment)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a2b1a36bda005425861cb71d6b754f12e" kindref="member">color::blue</ref></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(line_num_width))</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::right<sp/>&lt;&lt;<sp/>loc.line()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>loc.line_str()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1detail_1af3e0c1dfeb7087f3a96b5a52cfc1d21e" kindref="member">make_string</ref>(line_num_width<sp/>+<sp/>1,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a2b1a36bda005425861cb71d6b754f12e" kindref="member">color::blue</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1detail_1af3e0c1dfeb7087f3a96b5a52cfc1d21e" kindref="member">make_string</ref>(loc.column()-1<sp/></highlight><highlight class="comment">/*1-origin*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(loc.region()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>^------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1aac70aec9b5ba7000caaefcd4dcdc44e6" kindref="member">color::red</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;^---&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>~~~~~~~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>underline_len<sp/>=<sp/>(std::min)(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(loc.region()),<sp/>loc.line_str().size());</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1aac70aec9b5ba7000caaefcd4dcdc44e6" kindref="member">color::red</ref></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1detail_1af3e0c1dfeb7087f3a96b5a52cfc1d21e" kindref="member">make_string</ref>(underline_len,<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>comment;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!loc_com.empty());</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--&gt;<sp/>example.toml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>retval<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a2b1a36bda005425861cb71d6b754f12e" kindref="member">color::blue</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>--&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>loc_com.front().first.file_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>retval<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1detail_1af3e0c1dfeb7087f3a96b5a52cfc1d21e" kindref="member">make_string</ref>(line_num_width<sp/>+<sp/>1,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a2b1a36bda005425861cb71d6b754f12e" kindref="member">color::blue</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|\n&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>|<sp/>key<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>^---<sp/>missing<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>format_one_location(retval,<sp/>loc_com.front().first,<sp/>loc_com.front().second);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>locations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i=1;<sp/>i&lt;loc_com.size();<sp/>++i)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>prev<sp/>=<sp/>loc_com.at(i-1);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>curr<sp/>=<sp/>loc_com.at(i);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>filenames<sp/>are<sp/>the<sp/>same,<sp/>print<sp/>&quot;...&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prev.first.file_name()<sp/>==<sp/>curr.first.file_name())</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a2b1a36bda005425861cb71d6b754f12e" kindref="member">color::blue</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>...\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>if<sp/>filename<sp/>differs,<sp/>print<sp/>&quot;<sp/>--&gt;<sp/>filename.toml&quot;<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a2b1a36bda005425861cb71d6b754f12e" kindref="member">color::blue</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>--&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>curr.first.file_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1detail_1af3e0c1dfeb7087f3a96b5a52cfc1d21e" kindref="member">make_string</ref>(line_num_width<sp/>+<sp/>1,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a2b1a36bda005425861cb71d6b754f12e" kindref="member">color::blue</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|\n&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format_one_location(retval,<sp/>curr.first,<sp/>curr.second);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!helps.empty())</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1detail_1af3e0c1dfeb7087f3a96b5a52cfc1d21e" kindref="member">make_string</ref>(line_num_width<sp/>+<sp/>1,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a2b1a36bda005425861cb71d6b754f12e" kindref="member">color::blue</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>help<sp/>:<sp/>helps)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a23d94feb862d8473abe1914077a9f89d" kindref="member">color::bold</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nHint:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetoml_1_1color__ansi_1a747ea7fa9a8299101bb7ca4eaa74a502" kindref="member">color::reset</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>&lt;&lt;<sp/>help;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval.str();</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>toml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">//<sp/>TOML11_SOURCE_LOCATION_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="external/toml/source_location.hpp"/>
  </compounddef>
</doxygen>
