<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="exception_8hpp" kind="file" language="C++">
    <compoundname>exception.hpp</compoundname>
    <includes local="no">stdexcept</includes>
    <includes local="no">string</includes>
    <includes refid="source__location_8hpp" local="yes">source_location.hpp</includes>
    <includedby refid="value_8hpp" local="yes">external/toml/value.hpp</includedby>
    <incdepgraph>
      <node id="15">
        <label>color.hpp</label>
        <link refid="color_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>external/toml/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>region.hpp</label>
        <link refid="region_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>source_location.hpp</label>
        <link refid="source__location_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>algorithm</label>
      </node>
      <node id="14">
        <label>cassert</label>
      </node>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="11">
        <label>initializer_list</label>
      </node>
      <node id="13">
        <label>iomanip</label>
      </node>
      <node id="12">
        <label>iterator</label>
      </node>
      <node id="8">
        <label>memory</label>
      </node>
      <node id="16">
        <label>ostream</label>
      </node>
      <node id="6">
        <label>sstream</label>
      </node>
      <node id="2">
        <label>stdexcept</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>Game/Game.cpp</label>
        <link refid="_game_8cpp"/>
      </node>
      <node id="6">
        <label>Game/Game.hpp</label>
        <link refid="_game_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Player/Player.cpp</label>
        <link refid="_player_8cpp"/>
      </node>
      <node id="11">
        <label>Player/Player.hpp</label>
        <link refid="_player_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SettingsManager/SettingsManager.cpp</label>
        <link refid="_settings_manager_8cpp"/>
      </node>
      <node id="5">
        <label>SettingsManager/SettingsManager.hpp</label>
        <link refid="_settings_manager_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>SpriteContoller/SpriteController.cpp</label>
        <link refid="_sprite_controller_8cpp"/>
      </node>
      <node id="10">
        <label>SpriteContoller/SpriteController.hpp</label>
        <link refid="_sprite_controller_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>external/toml.hpp</label>
        <link refid="toml_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>external/toml/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>external/toml/get.hpp</label>
        <link refid="get_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>external/toml/literal.hpp</label>
        <link refid="literal_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>external/toml/parser.hpp</label>
        <link refid="parser_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>external/toml/serializer.hpp</label>
        <link refid="serializer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>external/toml/value.hpp</label>
        <link refid="value_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structtoml_1_1exception" prot="public">toml::exception</innerclass>
    <innerclass refid="structtoml_1_1syntax__error" prot="public">toml::syntax_error</innerclass>
    <innerclass refid="structtoml_1_1type__error" prot="public">toml::type_error</innerclass>
    <innerclass refid="structtoml_1_1internal__error" prot="public">toml::internal_error</innerclass>
    <innernamespace refid="namespacetoml">toml</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Toru<sp/>Niina<sp/>2017.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>MIT<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TOML11_EXCEPTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOML11_EXCEPTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="source__location_8hpp" kindref="compound">source_location.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetoml" kindref="compound">toml</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="structtoml_1_1exception" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1exception" kindref="compound">exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::exception</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16" refid="structtoml_1_1exception_1afe1e36cc229fd25c66844c0b1d7b0031" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1exception_1afe1e36cc229fd25c66844c0b1d7b0031" kindref="member">exception</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref>&amp;<sp/>loc):<sp/><ref refid="structtoml_1_1exception_1a108a011fc33bf295860cf104a05e10bd" kindref="member">loc_</ref>(loc)<sp/>{}</highlight></codeline>
<codeline lineno="17" refid="structtoml_1_1exception_1a693921187555fc0f8ae857fab5f977fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1exception_1a693921187555fc0f8ae857fab5f977fc" kindref="member">~exception</ref>()<sp/>noexcept<sp/>override<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="18" refid="structtoml_1_1exception_1ace56a61a2a06706ecdfe2789d04e5a37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structtoml_1_1exception_1ace56a61a2a06706ecdfe2789d04e5a37" kindref="member">what</ref>()<sp/>const<sp/>noexcept</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="19" refid="structtoml_1_1exception_1a11530f5a06324266a9462e6042efc72a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structtoml_1_1exception_1a11530f5a06324266a9462e6042efc72a" kindref="member">location</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1exception_1a108a011fc33bf295860cf104a05e10bd" kindref="member">loc_</ref>;}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="structtoml_1_1exception_1a108a011fc33bf295860cf104a05e10bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref><sp/><ref refid="structtoml_1_1exception_1a108a011fc33bf295860cf104a05e10bd" kindref="member">loc_</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structtoml_1_1syntax__error" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1syntax__error" kindref="compound">syntax_error</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1exception" kindref="compound">toml::exception</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28" refid="structtoml_1_1syntax__error_1adc0a6541788bea3190ac276428bab3da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1syntax__error_1adc0a6541788bea3190ac276428bab3da" kindref="member">syntax_error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>what_arg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref>&amp;<sp/>loc)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtoml_1_1exception" kindref="compound">exception</ref>(loc),<sp/><ref refid="structtoml_1_1syntax__error_1a715f7c1eaa9dabb4b96735e6cba7802e" kindref="member">what_</ref>(what_arg)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="31" refid="structtoml_1_1syntax__error_1a6618cd74b03674e377c6b09b88d3ac89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1syntax__error_1a6618cd74b03674e377c6b09b88d3ac89" kindref="member">~syntax_error</ref>()<sp/>noexcept<sp/>override<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="32" refid="structtoml_1_1syntax__error_1a64fcbe095591e839c302cf07757e0bed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structtoml_1_1syntax__error_1a64fcbe095591e839c302cf07757e0bed" kindref="member">what</ref>()<sp/>const<sp/>noexcept</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1syntax__error_1a715f7c1eaa9dabb4b96735e6cba7802e" kindref="member">what_</ref>.c_str();}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35" refid="structtoml_1_1syntax__error_1a715f7c1eaa9dabb4b96735e6cba7802e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structtoml_1_1syntax__error_1a715f7c1eaa9dabb4b96735e6cba7802e" kindref="member">what_</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structtoml_1_1type__error" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1type__error" kindref="compound">type_error</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1exception" kindref="compound">toml::exception</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41" refid="structtoml_1_1type__error_1a4b277e28265efe160bcb302c9ae06cd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1type__error_1a4b277e28265efe160bcb302c9ae06cd2" kindref="member">type_error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>what_arg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref>&amp;<sp/>loc)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtoml_1_1exception" kindref="compound">exception</ref>(loc),<sp/><ref refid="structtoml_1_1type__error_1a2ae2e26e66ee8286715593acbb95a0de" kindref="member">what_</ref>(what_arg)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="44" refid="structtoml_1_1type__error_1a1a89fcdfcc10022b6a72c90a2910d1fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1type__error_1a1a89fcdfcc10022b6a72c90a2910d1fe" kindref="member">~type_error</ref>()<sp/>noexcept<sp/>override<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="45" refid="structtoml_1_1type__error_1a0db8ccaf65ad1753fb620812ed2879a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structtoml_1_1type__error_1a0db8ccaf65ad1753fb620812ed2879a5" kindref="member">what</ref>()<sp/>const<sp/>noexcept</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1type__error_1a2ae2e26e66ee8286715593acbb95a0de" kindref="member">what_</ref>.c_str();}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48" refid="structtoml_1_1type__error_1a2ae2e26e66ee8286715593acbb95a0de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structtoml_1_1type__error_1a2ae2e26e66ee8286715593acbb95a0de" kindref="member">what_</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="structtoml_1_1internal__error" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtoml_1_1internal__error" kindref="compound">internal_error</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1exception" kindref="compound">toml::exception</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54" refid="structtoml_1_1internal__error_1ab7cd1247a6a0992b6d584b5f6ad51832" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1internal__error_1ab7cd1247a6a0992b6d584b5f6ad51832" kindref="member">internal_error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>what_arg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref>&amp;<sp/>loc)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtoml_1_1exception" kindref="compound">exception</ref>(loc),<sp/><ref refid="structtoml_1_1internal__error_1a4b7695ed150d5bffd25f827ab462a479" kindref="member">what_</ref>(what_arg)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="57" refid="structtoml_1_1internal__error_1a03bb83ff9f8232be864b2347e4e7cc19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1internal__error_1a03bb83ff9f8232be864b2347e4e7cc19" kindref="member">~internal_error</ref>()<sp/>noexcept<sp/>override<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="58" refid="structtoml_1_1internal__error_1af1453a114ea07bed42fd5a08c83e5f8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structtoml_1_1internal__error_1af1453a114ea07bed42fd5a08c83e5f8c" kindref="member">what</ref>()<sp/>const<sp/>noexcept</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtoml_1_1internal__error_1a4b7695ed150d5bffd25f827ab462a479" kindref="member">what_</ref>.c_str();}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61" refid="structtoml_1_1internal__error_1a4b7695ed150d5bffd25f827ab462a479" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structtoml_1_1internal__error_1a4b7695ed150d5bffd25f827ab462a479" kindref="member">what_</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>toml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>TOML_EXCEPTION</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="external/toml/exception.hpp"/>
  </compounddef>
</doxygen>
