<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="structtoml_1_1detail_1_1is__container" kind="struct" language="C++" prot="public">
    <compoundname>toml::detail::is_container</compoundname>
    <basecompoundref refid="structtoml_1_1detail_1_1conjunction" prot="public" virt="non-virtual">toml::detail::conjunction&lt; negation&lt; is_map&lt; T &gt; &gt;, negation&lt; std::is_same&lt; T, std::string &gt; &gt;, has_iterator&lt; T &gt;, has_value_type&lt; T &gt; &gt;</basecompoundref>
    <derivedcompoundref refid="structtoml_1_1detail_1_1is__container_3_01_t_01_6_01_4" prot="public" virt="non-virtual">toml::detail::is_container&lt; T &amp; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structtoml_1_1detail_1_1is__container_3_01_t_01const_01_6_01_4" prot="public" virt="non-virtual">toml::detail::is_container&lt; T const &amp; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structtoml_1_1detail_1_1is__container_3_01_t_01const_01volatile_01_6_01_4" prot="public" virt="non-virtual">toml::detail::is_container&lt; T const volatile &amp; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structtoml_1_1detail_1_1is__container_3_01_t_01volatile_01_6_01_4" prot="public" virt="non-virtual">toml::detail::is_container&lt; T volatile &amp; &gt;</derivedcompoundref>
    <includes refid="traits_8hpp" local="no">traits.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>toml::detail::conjunction&lt; negation&lt; is_map&lt; T &gt; &gt;, negation&lt; std::is_same&lt; T, std::string &gt; &gt;, has_iterator&lt; T &gt;, has_value_type&lt; T &gt; &gt;</label>
        <link refid="structtoml_1_1detail_1_1conjunction"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::true_type</label>
      </node>
      <node id="4">
        <label>toml::detail::is_container&lt; T &amp; &gt;</label>
        <link refid="structtoml_1_1detail_1_1is__container_3_01_t_01_6_01_4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>toml::detail::is_container&lt; T &gt;</label>
        <link refid="structtoml_1_1detail_1_1is__container"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>toml::detail::is_container&lt; T const &amp; &gt;</label>
        <link refid="structtoml_1_1detail_1_1is__container_3_01_t_01const_01_6_01_4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>toml::detail::is_container&lt; T const volatile &amp; &gt;</label>
        <link refid="structtoml_1_1detail_1_1is__container_3_01_t_01const_01volatile_01_6_01_4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>toml::detail::is_container&lt; T volatile &amp; &gt;</label>
        <link refid="structtoml_1_1detail_1_1is__container_3_01_t_01volatile_01_6_01_4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>toml::detail::conjunction&lt; negation&lt; is_map&lt; T &gt; &gt;, negation&lt; std::is_same&lt; T, std::string &gt; &gt;, has_iterator&lt; T &gt;, has_value_type&lt; T &gt; &gt;</label>
        <link refid="structtoml_1_1detail_1_1conjunction"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::true_type</label>
      </node>
      <node id="1">
        <label>toml::detail::is_container&lt; T &gt;</label>
        <link refid="structtoml_1_1detail_1_1is__container"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="external/toml/traits.hpp" line="209" column="1" bodyfile="external/toml/traits.hpp" bodystart="219" bodyend="219"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
