<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="structtoml_1_1exception" kind="struct" language="C++" prot="public">
    <compoundname>toml::exception</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::exception</basecompoundref>
    <derivedcompoundref refid="structtoml_1_1internal__error" prot="public" virt="non-virtual">toml::internal_error</derivedcompoundref>
    <derivedcompoundref refid="structtoml_1_1syntax__error" prot="public" virt="non-virtual">toml::syntax_error</derivedcompoundref>
    <derivedcompoundref refid="structtoml_1_1type__error" prot="public" virt="non-virtual">toml::type_error</derivedcompoundref>
    <includes refid="exception_8hpp" local="no">exception.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structtoml_1_1exception_1a108a011fc33bf295860cf104a05e10bd" prot="protected" static="no" mutable="no">
        <type><ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref></type>
        <definition>source_location toml::exception::loc_</definition>
        <argsstring></argsstring>
        <name>loc_</name>
        <qualifiedname>toml::exception::loc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="external/toml/exception.hpp" line="22" column="21" bodyfile="external/toml/exception.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structtoml_1_1exception_1afe1e36cc229fd25c66844c0b1d7b0031" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>toml::exception::exception</definition>
        <argsstring>(const source_location &amp;loc)</argsstring>
        <name>exception</name>
        <qualifiedname>toml::exception::exception</qualifiedname>
        <param>
          <type>const <ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref> &amp;</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="external/toml/exception.hpp" line="16" column="14" bodyfile="external/toml/exception.hpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="structtoml_1_1exception_1a693921187555fc0f8ae857fab5f977fc" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type></type>
        <definition>virtual toml::exception::~exception</definition>
        <argsstring>() noexcept override=default</argsstring>
        <name>~exception</name>
        <qualifiedname>toml::exception::~exception</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="external/toml/exception.hpp" line="17" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structtoml_1_1exception_1ace56a61a2a06706ecdfe2789d04e5a37" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char * toml::exception::what</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>what</name>
        <qualifiedname>toml::exception::what</qualifiedname>
        <reimplementedby refid="structtoml_1_1syntax__error_1a64fcbe095591e839c302cf07757e0bed">what</reimplementedby>
        <reimplementedby refid="structtoml_1_1type__error_1a0db8ccaf65ad1753fb620812ed2879a5">what</reimplementedby>
        <reimplementedby refid="structtoml_1_1internal__error_1af1453a114ea07bed42fd5a08c83e5f8c">what</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="external/toml/exception.hpp" line="18" column="24" bodyfile="external/toml/exception.hpp" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="structtoml_1_1exception_1a11530f5a06324266a9462e6042efc72a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type><ref refid="structtoml_1_1source__location" kindref="compound">source_location</ref> const &amp;</type>
        <definition>virtual source_location const  &amp; toml::exception::location</definition>
        <argsstring>() const noexcept</argsstring>
        <name>location</name>
        <qualifiedname>toml::exception::location</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="external/toml/exception.hpp" line="19" column="35" bodyfile="external/toml/exception.hpp" bodystart="19" bodyend="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>std::exception</label>
      </node>
      <node id="1">
        <label>toml::exception</label>
        <link refid="structtoml_1_1exception"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>toml::internal_error</label>
        <link refid="structtoml_1_1internal__error"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>toml::syntax_error</label>
        <link refid="structtoml_1_1syntax__error"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>toml::type_error</label>
        <link refid="structtoml_1_1type__error"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>std::exception</label>
      </node>
      <node id="1">
        <label>toml::exception</label>
        <link refid="structtoml_1_1exception"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>loc_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>toml::source_location</label>
        <link refid="structtoml_1_1source__location"/>
      </node>
    </collaborationgraph>
    <location file="external/toml/exception.hpp" line="13" column="1" bodyfile="external/toml/exception.hpp" bodystart="14" bodyend="23"/>
    <listofallmembers>
      <member refid="structtoml_1_1exception_1afe1e36cc229fd25c66844c0b1d7b0031" prot="public" virt="non-virtual"><scope>toml::exception</scope><name>exception</name></member>
      <member refid="structtoml_1_1exception_1a108a011fc33bf295860cf104a05e10bd" prot="protected" virt="non-virtual"><scope>toml::exception</scope><name>loc_</name></member>
      <member refid="structtoml_1_1exception_1a11530f5a06324266a9462e6042efc72a" prot="public" virt="virtual"><scope>toml::exception</scope><name>location</name></member>
      <member refid="structtoml_1_1exception_1ace56a61a2a06706ecdfe2789d04e5a37" prot="public" virt="virtual"><scope>toml::exception</scope><name>what</name></member>
      <member refid="structtoml_1_1exception_1a693921187555fc0f8ae857fab5f977fc" prot="public" virt="virtual"><scope>toml::exception</scope><name>~exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
