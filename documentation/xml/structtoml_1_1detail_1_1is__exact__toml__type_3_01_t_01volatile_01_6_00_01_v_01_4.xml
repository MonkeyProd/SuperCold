<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="structtoml_1_1detail_1_1is__exact__toml__type_3_01_t_01volatile_01_6_00_01_v_01_4" kind="struct" language="C++" prot="public">
    <compoundname>toml::detail::is_exact_toml_type&lt; T volatile &amp;, V &gt;</compoundname>
    <basecompoundref refid="structtoml_1_1detail_1_1is__exact__toml__type" prot="public" virt="non-virtual">toml::detail::is_exact_toml_type&lt; T, V &gt;</basecompoundref>
    <includes refid="types_8hpp" local="no">types.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename V</type>
      </param>
    </templateparamlist>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>toml::detail::disjunction&lt; std::is_same&lt; T, boolean &gt;, std::is_same&lt; T, integer &gt;, std::is_same&lt; T, floating &gt;, std::is_same&lt; T, string &gt;, std::is_same&lt; T, offset_datetime &gt;, std::is_same&lt; T, local_datetime &gt;, std::is_same&lt; T, local_date &gt;, std::is_same&lt; T, local_time &gt;, std::is_same&lt; T, Value::array_type &gt;, std::is_same&lt; T, Value::table_type &gt; &gt;</label>
        <link refid="structtoml_1_1detail_1_1disjunction"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>toml::detail::is_exact_toml_type&lt; T, V &gt;</label>
        <link refid="structtoml_1_1detail_1_1is__exact__toml__type"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::false_type</label>
      </node>
      <node id="1">
        <label>toml::detail::is_exact_toml_type&lt; T volatile &amp;, V &gt;</label>
        <link refid="structtoml_1_1detail_1_1is__exact__toml__type_3_01_t_01volatile_01_6_00_01_v_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>toml::detail::disjunction&lt; std::is_same&lt; T, boolean &gt;, std::is_same&lt; T, integer &gt;, std::is_same&lt; T, floating &gt;, std::is_same&lt; T, string &gt;, std::is_same&lt; T, offset_datetime &gt;, std::is_same&lt; T, local_datetime &gt;, std::is_same&lt; T, local_date &gt;, std::is_same&lt; T, local_time &gt;, std::is_same&lt; T, Value::array_type &gt;, std::is_same&lt; T, Value::table_type &gt; &gt;</label>
        <link refid="structtoml_1_1detail_1_1disjunction"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>toml::detail::is_exact_toml_type&lt; T, V &gt;</label>
        <link refid="structtoml_1_1detail_1_1is__exact__toml__type"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::false_type</label>
      </node>
      <node id="1">
        <label>toml::detail::is_exact_toml_type&lt; T volatile &amp;, V &gt;</label>
        <link refid="structtoml_1_1detail_1_1is__exact__toml__type_3_01_t_01volatile_01_6_00_01_v_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="external/toml/types.hpp" line="167" column="13" bodyfile="external/toml/types.hpp" bodystart="167" bodyend="167"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
